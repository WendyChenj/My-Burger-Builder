{"version":3,"sources":["components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Headerbar/Headerbar.js","components/Layout/Layout.js","hoc/Aux.js","components/Burger/BurgerIngredients/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Burger/BurgerOrderSummary/BurgerOrderSummary.js","components/UI/Spinner/Spinner.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","store/action/burgerBuilder.js","store/action/actionTypes.js","store/action/order.js","components/CheckOutSummary/CheckOutSummary.js","containers/CheckOut/CheckOut.js","components/UI/OrderCard/OrderCard.js","containers/Orders/Orders.js","components/FormData/Address/Address.js","components/FormData/Name/Name.js","components/FormData/PhoneNumber/PhoneNumber.js","components/FormData/Email/Email.js","components/FormData/BillingAddress/BillingAddress.js","components/FormData/BurgerInfo/BurgerInfo.js","utility/utility.js","containers/CheckOut/ContactData/ContactData.js","store/action/auth.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/buildBurger.js","store/reducers/order.js","store/reducers/auth.js","index.js","assets/images/burger-logo.png"],"names":["NavigationItem","props","className","to","link","exact","activeClassName","children","NavigationItems","isAuth","useStyle","makeStyles","theme","root","position","color","palette","primary","dark","toolbarRoot","display","flexDirection","justifyContent","menuIcon","fontSize","HeaderBar","useState","anchorEl","setAnchorEl","classes","matches","useMediaQuery","history","useHistory","clickCloseHandler","event","preventDefault","push","AppBar","Toolbar","src","Logo","alt","IconButton","edge","aria-label","onClick","currentTarget","aria-haspopup","Menu","id","open","Boolean","onClose","MenuItem","Layout","isAuthenticate","useSelector","state","auth","token","aux","BurgerIngredient","ingredient","this","type","React","Component","Burger","memo","ingredients","burgerBuilder","transformed","Object","keys","map","igKey","Array","parseInt","_","index","key","values","reduce","acc","cur","controls","label","BuildControl","removed","disabled","added","BuildControls","price","toFixed","ctrl","orderDisabled","ordered","backdrop","show","clicked","modal","Aux","style","transform","opacity","burgerOrderSummary","burgerOrder","textTransform","orderCancelled","orderContinue","spinner","instance","axios","create","baseURL","BurgerBuilder","totalPrice","dispatch","useDispatch","purchasing","setPurchasing","useEffect","get","then","response","data","catch","error","console","log","purchasingCancelledHandler","burger","buildControls","disabledInfo","totalAmtIgr","orderDisable","CheckOutSummary","cancel","continue","CheckOut","checkOutPage","pathname","goBack","marginTop","marginBottom","height","title","padding","orderStatus","paddingLeft","line","ingTitle","ing","OrderCard","eachIng","Typography","ele","Math","random","Card","CardContent","align","variant","component","paddingTop","parseFloat","Button","size","reorder","Orders","orders","order","queryParams","localStorage","getItem","res","fetchedOrders","fetchOrderFail","length","margin","marginLeft","ord","Grid","item","xs","sm","md","lg","ings","reorderBurger","reorderHandler","container","spacing","Address","fontWeight","TextField","required","width","value","streetValue","onChange","streetChanged","street2Value","street2Changed","cityValue","cityChanged","stateValue","stateChanged","codeValue","codeChanged","countryValue","countryChanged","Name","firstNameValue","firstNameChanged","lastNameValue","lastNameChanged","PhoneNumber","phoneNumberValue","phoneNumberChanged","placeholder","Email","emailValue","emailChanged","BillingAddress","FormControl","RadioGroup","name","billingValue","billingChanged","FormControlLabel","control","Radio","BurgerInfo","OrderInfo","checkValidity","rules","isValid","trim","minLength","maxLength","isEmail","test","isNumeric","postalCodeLength","ContactData","params","first_name","config","placeHolder","validation","last_name","setName","email","setEmail","phoneNumber","setPhoneNumber","streetAddress","streetAddress2","city","postalCode","country","street","setStreet","selectedOption","billingAddress","setBillingAddress","options","deliveryMethod","setDeliveryMethod","specialInstrument","setSpecialInstrument","formValid","setFormValid","purchased","userId","validate","inputIdentifier","totalFormValid","changedInputHandler","secondIdentifier","target","billingAddressChangedHandler","redirectPurchased","Container","maxWidth","noValidate","autoComplete","onSubmit","customerInfo","orderData","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","proceedToPay","customer","multiline","rows","authSuccess","authData","authLogOut","removeItem","expirationLogOut","expirationTime","setTimeout","Auth","password","setPassword","isSignUp","setIsSignUp","setTotalFormValid","building","signInForm","formInputEle","inputChangedHandler","redirectAuth","returnSecureToken","url","setItem","idToken","localId","Date","now","expiresIn","authFail","message","letterSpacing","Logout","App","onAuthStatus","expirationDate","path","window","location","hostname","match","item_price","salad","bacon","cheese","meat","initialState","reducer","action","loading","newOrder","concat","createMuiTheme","light","main","contrastThreshold","tonalOffset","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","buildBurgerReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"8kBAIaA,G,OAAiB,SAACC,GAC3B,OACI,wBAAIC,UAAU,kBACV,kBAAC,IAAD,CAASC,GAAIF,EAAMG,KAAMC,OAAK,EAACC,gBAAgB,UAC3CL,EAAMM,aAkBPC,EAXS,SAACP,GACrB,OACI,wBAAIC,UAAU,mBACV,kBAAC,EAAD,CAAgBE,KAAK,KAArB,kBACA,kBAAC,EAAD,CAAgBA,KAAK,WAArB,UACCH,EAAMQ,OAAS,kBAAC,EAAD,CAAgBL,KAAK,WAArB,YACb,kBAAC,EAAD,CAAgBA,KAAK,SAArB,a,kCCXTM,EAAWC,aAAW,SAACC,GAAD,MAAY,CACpCC,KAAM,CACFC,SAAU,QACVC,MAAOH,EAAMI,QAAQC,QAAQC,MAEjCC,YAAa,CACTC,QAAS,OACTC,cAAe,MACfC,eAAgB,iBAEpBC,SAAU,CACNR,MAAO,QACPS,SAAU,aAgEHC,EA5DG,SAACxB,GAAW,IAAD,EAESyB,mBAAS,MAFlB,mBAEjBC,EAFiB,KAEPC,EAFO,KAInBC,EAAUnB,IAEVoB,EAAUC,YAAc,sBAE1BC,EAAUC,cAMRC,EAAoB,SAACC,EAAO/B,GAC9B+B,EAAMC,iBACNJ,EAAQK,KAAKjC,GACbwB,EAAY,OAOhB,OACI,6BACI,kBAACU,EAAA,EAAD,CAAQpC,UAAW2B,EAAQhB,MACvB,kBAAC0B,EAAA,EAAD,CAASrC,UAAU,eACf,yBAAKA,UAAU,cACX,yBAAKsC,IAAKC,IAAMC,IAAI,cAGvBZ,EACI,6BACG,kBAAC,EAAD,CAAiBrB,OAAQR,EAAMQ,UAGlC,6BACG,kBAACkC,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,OAAOC,QA5BxC,SAACX,GACtBP,EAAYO,EAAMY,gBA2BsEC,gBAAc,QAC9E,kBAAC,IAAD,CAAU9C,UAAW2B,EAAQN,YAGjC,kBAAC0B,EAAA,EAAD,CAAMC,GAAG,cAAcC,KAAMC,QAAQzB,GAAWA,SAAUA,EAAU0B,QAtBnE,WACrBzB,EAAY,QAsBY,kBAAC0B,EAAA,EAAD,CAAUR,QAAS,SAAAX,GAAK,OAAID,EAAkBC,EAAO,OAArD,kBACA,kBAACmB,EAAA,EAAD,CAAUR,QAAS,SAAAX,GAAK,OAAID,EAAkBC,EAAO,aAArD,UAEClC,EAAMQ,OACH,kBAAC6C,EAAA,EAAD,CAAUR,QAAS,SAAAX,GAAK,OAAID,EAAkBC,EAAO,aAArD,WACE,kBAACmB,EAAA,EAAD,CAAUR,QAAS,SAAAX,GAAK,OAAID,EAAkBC,EAAO,WAArD,iBCtDvBoB,EAfA,SAAAtD,GAAU,IACfuD,EAAmBC,aAAa,SAAAC,GAAK,MAAK,CAChDF,eAAqC,OAArBE,EAAMC,KAAKC,UADrBJ,eAIR,OACE,oCACE,kBAAC,EAAD,CAAW/C,OAAQ+C,IACnB,0BAAMtD,UAAU,WACbD,EAAMM,Y,OCZAsD,EAFH,SAAC5D,GAAD,OAAWA,EAAMM,U,iDC8CduD,G,8KAtCP,IAAIC,EAAa,KAGjB,OAAQC,KAAK/D,MAAMgE,MACf,IAAM,eACFF,EAAa,yBAAK7D,UAAU,gBAC5B,MACJ,IAAM,YACF6D,EACI,yBAAK7D,UAAU,YACZ,yBAAKA,UAAU,WACf,yBAAKA,UAAU,YAGtB,MACJ,IAAM,OACF6D,EAAa,yBAAK7D,UAAU,SAC5B,MACJ,IAAM,SACF6D,EAAa,yBAAK7D,UAAU,WAC5B,MACJ,IAAM,QACF6D,EAAa,yBAAK7D,UAAU,UAC5B,MACJ,IAAM,QACF6D,EAAa,yBAAK7D,UAAU,UAC5B,MACJ,QACI6D,EAAa,KAErB,OAAOA,M,GAlCgBG,IAAMC,YCgCtBC,EA9BAF,IAAMG,MAAM,WAAO,IAEtBC,EAAgBb,aAAa,SAAAC,GAAK,MAAK,CAC3CY,YAAaZ,EAAMa,cAAcD,gBAD7BA,YAIJE,EAAcC,OAAOC,KAAKJ,GAAaK,KAAI,SAAAC,GAEvC,OAAO,YAAKC,MAAMC,SAASR,EAAaM,MAAWD,KAC/C,SAACI,EAAGC,GACA,OAAO,kBAAC,EAAD,CAAkBC,IAAKL,EAAQI,EAAOf,KAAMW,UAWnE,OAJmB,IAFFH,OAAOS,OAAOZ,GAAaa,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,KAGxEb,EAAc,6EAId,yBAAKtE,UAAU,UACX,kBAAC,EAAD,CAAkB+D,KAAK,cACrBO,EACF,kBAAC,EAAD,CAAkBP,KAAK,qBC5B7BqB,G,OAAW,CACb,CAAEC,MAAO,QAAStB,KAAM,SACxB,CAAEsB,MAAO,QAAStB,KAAM,SACxB,CAAEsB,MAAO,SAAUtB,KAAM,UACzB,CAAEsB,MAAO,OAAQtB,KAAM,UAKrBuB,EAAe,SAACvF,GAClB,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,SAASD,EAAMsF,OAC9B,4BAASrF,UAAU,qBAAqB4C,QAAS7C,EAAMwF,QAASC,SAAUzF,EAAMyF,UAAhF,QACA,4BAAQxF,UAAU,qBAAqB4C,QAAS7C,EAAM0F,OAAtD,UAyBGC,EAnBO,SAAC3F,GAEnB,OACI,yBAAKC,UAAU,iBACX,2CAAiBD,EAAM4F,MAAMC,QAAQ,IACpCR,EAASX,KAAI,SAAAoB,GAAI,OAAI,kBAAC,EAAD,CAClBd,IAAKc,EAAKR,MACVA,MAAOQ,EAAKR,MACZI,MAAO,kBAAM1F,EAAM0F,MAAMI,EAAK9B,OAC9BwB,QAAS,kBAAMxF,EAAMwF,QAAQM,EAAK9B,OAClCyB,SAAYzF,EAAMyF,SAASK,EAAK9B,WAEpC,4BAAQ/D,UAAU,cACVwF,SAAUzF,EAAM+F,cAChBlD,QAAS7C,EAAMgG,SAFvB,eC3BGC,G,cAJE,SAACjG,GACd,OAAQA,EAAMkG,KAAO,yBAAKjG,UAAU,WAAW4C,QAAS7C,EAAMmG,UAAc,OCcjEC,EAdD,SAACpG,GACX,OACI,kBAACqG,EAAD,KACI,kBAAC,EAAD,CAAUH,KAAMlG,EAAMkG,KAAMC,QAASnG,EAAMmG,UAC3C,yBAAKlG,UAAU,QACVqG,MAAO,CAACC,UAAWvG,EAAMkG,KAAO,gBAAiB,qBACzCM,QAASxG,EAAMkG,KAAO,IAAK,MACnClG,EAAMM,YCWRmG,G,OApBY,SAACzG,GACxB,IAAI0G,EAAclC,OAAOC,KAAKzE,EAAMqE,aAAaK,KACjD,SAAAC,GAAK,OAAI,wBAAIK,IAAKL,GAAO,0BAAM2B,MAAO,CAAEK,cAAe,eAAgBhC,GAA9D,KAA8E3E,EAAMqE,YAAYM,OAGzG,OACI,6BACI,0CACA,iFACA,4BACI+B,GAEJ,2BAAG,iDAAuB1G,EAAM4F,QAChC,oDACA,4BAAQ3F,UAAU,gBAAgB4C,QAAS7C,EAAM4G,gBAAjD,UACA,4BAAQ3G,UAAU,iBAAiB4C,QAAS7C,EAAM6G,eAAlD,eCRGC,G,OANC,WACZ,OACI,yBAAK7G,UAAU,UAAf,gB,iBCAO8G,EAJEC,IAAMC,OAAO,CAC1BC,QAAS,iDC6FEC,EAnFO,WAAO,IAAD,EAEY3D,aAAY,SAAAC,GAAK,MAAK,CACtDY,YAAaZ,EAAMa,cAAcD,YACjC+C,WAAY3D,EAAMa,cAAc8C,eAF5B/C,EAFgB,EAEhBA,YAAa+C,EAFG,EAEHA,WAKfC,EAAWC,cAPO,EASc7F,oBAAS,GATvB,mBAShB8F,EATgB,KASJC,EATI,KAWpBzF,EAAUC,cAEdyF,qBAAU,WACNJ,GCFG,SAAAA,GACHL,EAAMU,IAAI,qBACLC,MAAK,SAAAC,GACFP,EAVL,CACHrD,KCjByB,oBDkBzBK,YAQuBuD,EAASC,UAE3BC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SDFhCV,EGxBG,CACHrD,KDE4B,2BFsB7B,CAAEqD,IAEL,IAcMa,EAA6B,WAC/BV,GAAc,IAWdW,EAAS,kBAAC,EAAD,MACTC,EAAgB,KAChB3B,EAAqB,KAEzB,GAAIpC,EAAa,CACb,IAAIgE,EAAY,eAAOhE,GAEvB,IAAI,IAAIW,KAAOqD,EACXA,EAAarD,GAAQqD,EAAarD,IAAQ,EAG9CmD,EAAS,kBAAC,EAAD,CAAQ9D,YAAaA,IAE9B+D,EAAgB,kBAAC,EAAD,CACZ1C,MAAO,SAAC5B,GAAD,OAAgBuD,ECnExB,CACHrD,KCLsB,iBDMtBF,WDiEkDA,KAC9C0B,QAAS,SAAC1B,GAAD,OAAgBuD,EC7D1B,CACHrD,KCXyB,oBDYzBF,WD2DuDA,KACnD2B,SAAU4C,EACVzC,MAAOwB,EACPrB,cA5Ca,SAAC1B,GAClB,IAAIiE,EAAc,EAClB,IAAK,IAAItD,KAAOX,EACZiE,GAAejE,EAAYW,GAG/B,QAAIsD,EAAc,GAsCCC,CAAalE,GAC5B2B,QAnCkB,WACtBwB,GAAc,MAqCdf,EAAqB,kBAAC,EAAD,CAAoBpC,YAAaA,EAC9BuC,eAAgBsB,EAChBrB,cAhCM,WAC9BmB,QAAQC,IAAI5D,GACZ2D,QAAQC,IAAIV,GACZS,QAAQC,IAAIlG,GACZA,EAAQK,KAAK,cA6BWwD,MAAOwB,EAAWvB,QAAQ,KAGtD,OACI,kBAACQ,EAAD,KACK8B,EACD,kBAAC,EAAD,CAAOjC,KAAMqB,EAAYpB,QAAS+B,GAC7BzB,GAEJ2B,II5EEI,G,OAXS,SAACxI,GACrB,OACI,yBAAKC,UAAU,mBACX,4DACA,kBAAC,EAAD,CAAQoE,YAAerE,EAAMqE,cAC7B,4BAAQpE,UAAU,gBAAgB4C,QAAS7C,EAAMyI,QAAjD,UACA,4BAAQxI,UAAU,iBAAiB4C,QAAS7C,EAAM0I,UAAW1I,EAAMQ,OAAS,WAAY,cCsCrFmI,EA1CE,WAAO,IAAD,EAEqBnF,aAAa,SAAAC,GAAK,MAAK,CAC3DY,YAAaZ,EAAMa,cAAcD,YACjCd,eAAqC,OAArBE,EAAMC,KAAKC,UAFvBU,EAFW,EAEXA,YAAad,EAFF,EAEEA,eAKjBxB,EAAUC,cAeV4G,EAAe,kBAAC,IAAD,CAAU1I,GAAK,CAAC2I,SAAU,OAa7C,OAZIxE,IACAuE,EACE,6BACE,kBAAC,EAAD,CACIvE,YAAaA,EACboE,OAnBkB,WAC1B1G,EAAQ+G,UAmBAJ,SAhBiB,WAErBnF,EACAxB,EAAQK,KAAK,CAACyG,SAAU,0BAExB9G,EAAQK,KAAK,CAACyG,SAAU,WAYpBrI,OAAU+C,MAMlB,6BACKqF,I,0ECrCPnI,GAAWC,YAAW,CACxBE,KAAM,CACFmI,UAAW,OACXC,aAAc,OACdC,OAAQ,SAEZC,MAAO,CACH/H,QAAS,OACTC,cAAe,MACfC,eAAgB,aAChB8H,QAAS,WAEbC,YAAa,CACT7H,SAAU,SACV8H,YAAa,OAEjBC,KAAM,CACFH,QAAS,UAEbI,SAAU,CACNJ,QAAS,SAEbK,IAAK,CACDrI,QAAS,OACTE,eAAgB,gBAChB8H,QAAS,iBAsDFM,GAlDG,SAAAzJ,GACd,IAAM4B,EAAUnB,KAEViJ,EAAUlF,OAAOC,KAAKzE,EAAMqE,aAAaK,KAAK,SAAA8E,GAChD,OACI,yBAAKvJ,UAAW2B,EAAQ4H,IAAKxE,IAAMwE,GAC/B,kBAACG,EAAA,EAAD,KACKH,GAEL,8BACM,YAAI5E,MAAOC,SAAS7E,EAAMqE,YAAYmF,MAAS9E,KAAI,SAAAkF,GAAG,OACpD,kBAAC,KAAD,CAAc5E,IAAK6E,KAAKC,mBAK5C,OACI,kBAACC,EAAA,EAAD,CAAM9J,UAAW2B,EAAQhB,MACrB,kBAACoJ,EAAA,EAAD,KACI,yBAAK/J,UAAW2B,EAAQsH,OACpB,kBAAC,KAAD,MACA,kBAACS,EAAA,EAAD,CAAY1J,UAAW2B,EAAQwH,YAAaa,MAAM,UAAlD,oBAKJ,6BAEA,yBAAK3D,MAAO,CAAC2C,OAAQ,UACjB,kBAACU,EAAA,EAAD,CAAYO,QAAQ,UAAUC,UAAU,KAAKlK,UAAW2B,EAAQ2H,UAAhE,gBAICG,GAGL,6BAEA,yBAAKpD,MAAO,CAAC8D,WAAY,OAAQjJ,QAAS,OAAQE,eAAgB,kBAC9D,kBAACsI,EAAA,EAAD,CAAYO,QAAQ,WAApB,YAAwCG,WAAWrK,EAAM4F,OAAOC,QAAQ,IACxE,kBAACyE,EAAA,EAAD,CAAQC,KAAK,QAAQL,QAAQ,YAAYpJ,MAAM,YAAY+B,QAAS7C,EAAMwK,SAA1E,e,UCMLC,GAxEA,WAAO,IAAD,EAEkBjH,aAAa,SAAAC,GAAK,MAAK,CACtDiH,OAAQjH,EAAMkH,MAAMD,OACpBnH,eAAqC,OAArBE,EAAMC,KAAKC,UAFvB+G,EAFS,EAETA,OAAQnH,EAFC,EAEDA,eAKV8D,EAAWC,cAGjBG,qBAAU,WACNJ,GJ4CG,SAAAA,GACHA,EArBG,CACHrD,KDpC0B,uBCyD1B,IAAM4G,EAAc,SAAWC,aAAaC,QAAQ,SAAW,8BAAgCD,aAAaC,QAAQ,UAAY,IAChI9D,EAAMU,IAAI,eAAiBkD,GACtBjD,MAAK,SAAAoD,GACF,IAAMC,EAAgB,GACtB,IAAK,IAAIhG,KAAO+F,EAAIlD,KAChBmD,EAAc5I,KAAd,2BACO2I,EAAIlD,KAAK7C,IADhB,IAEI/B,GAAI+B,KAGZqC,EA1BL,CACHrD,KDzC4B,uBC0C5B0G,OAwBmCM,OAE9BlD,OAAO,SAAAC,GAAK,OAAIV,EAtBC,SAACU,GAC3B,MAAO,CACH/D,KD/CyB,oBCgDzB+D,MAAOA,GAmBwBkD,CAAelD,YIxD/C,IAEH,IAAIhG,EAAUC,cAQV2I,EAAQ,KA+BR,OApBAA,EATCpH,EAQwB,IAAlBmH,EAAOQ,OAEV,kBAAC,EAAD,CAAOhF,KAAwB,IAAlBwE,EAAOQ,QAChB,kBAACvB,EAAA,EAAD,CAAYrD,MAAO,CAAC6E,OAAQ,SAA5B,2BACA,kBAACb,EAAA,EAAD,CAAQJ,QAAQ,YAAYpJ,MAAM,YAAY+B,QAAS,kBAAMd,EAAQK,KAAK,MAAMkE,MAAO,CAAC8E,WAAY,SAApG,6BAMAV,EAAOhG,KAAI,SAAA2G,GACf,OACI,kBAACC,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAI3G,IAAKqG,EAAIpI,IAC/C,kBAAC,GAAD,CAAYoB,YAAagH,EAAIhH,YAAauB,MAAOyF,EAAIzF,MAClD4E,QAAS,SAACtI,GAAD,OA9BL,SAACA,EAAO0J,EAAMxE,GACjClF,EAAMC,iBACNkF,ENMqB,SAAChD,EAAa+C,GACvC,MAAO,CACHpD,KClBsB,iBDmBtBK,YAAaA,EACb+C,WAAYA,GMVHyE,CAAcD,EAAMxE,IAC7BrF,EAAQK,KAAK,aA2BsB0J,CAAe5J,EAAOmJ,EAAIhH,YAAagH,EAAIzF,cApBzE,kBAAC,EAAD,CAAOM,MAAO3C,GACX,kBAACoG,EAAA,EAAD,CAAYrD,MAAO,CAAC6E,OAAQ,SAA5B,yBACA,kBAACb,EAAA,EAAD,CAAQJ,QAAQ,YAAYpJ,MAAM,YAAY+B,QAAS,kBAAMd,EAAQK,KAAK,UAAUkE,MAAO,CAAC8E,WAAY,SAAxG,YA0BJ,6BACI,kBAACE,GAAA,EAAD,CAAMS,WAAS,GACX,kBAACT,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IAEf,kBAACF,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACF,GAAA,EAAD,CAAMS,WAAS,EAACC,QAAS,GACjBrB,IAGZ,kBAACW,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,O,mBC7CpBS,GAzBC,SAACjM,GACb,OACI,6BACI,kBAAC2J,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAASlM,EAAMkJ,OACnE,kBAACiD,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,0BAA0BqC,MAAM,iBAAiB4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,OAAQiB,MAAO,OAAQ9B,KAAK,QAC1J+B,MAAOtM,EAAMuM,YAAaC,SAAUxM,EAAMyM,gBAC9C,kBAACN,GAAA,EAAD,CAAWlJ,GAAG,4BAA4BqC,MAAM,mBAAmB4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,OAAQiB,MAAO,OAAQ9B,KAAK,QACrJ+B,MAAOtM,EAAM0M,aAAcF,SAAUxM,EAAM2M,iBAC/C,6BACI,kBAACR,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,gBAAgBqC,MAAM,OAAO4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QACxH+B,MAAOtM,EAAM4M,UAAWJ,SAAUxM,EAAM6M,cAC5C,kBAACV,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,iBAAiBqC,MAAM,QAAQ4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QAC1H+B,MAAOtM,EAAM8M,WAAYN,SAAUxM,EAAM+M,gBAGjD,6BACI,kBAACZ,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,uBAAuBqC,MAAM,cAAc4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QACtI+B,MAAOtM,EAAMgN,UAAWR,SAAUxM,EAAMiN,cAC5C,kBAACd,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,mBAAmBqC,MAAM,UAAU4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QAC9H+B,MAAOtM,EAAMkN,aAAcV,SAAUxM,EAAMmN,oBCPhDC,GAZF,SAACpN,GACV,OACI,6BACI,kBAAC2J,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,aACA,kBAACC,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,sBAAsBqC,MAAM,aAAa4E,QAAQ,WAAW5D,MAAO,CAAC8E,WAAY,OAAQrC,UAAW,QAASwB,KAAK,QACpI+B,MAAOtM,EAAMqN,eAAgBb,SAAUxM,EAAMsN,mBACjD,kBAACnB,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,qBAAqBqC,MAAM,YAAY4E,QAAQ,WAAY5D,MAAO,CAAC8E,WAAY,OAAQrC,UAAW,QAASwB,KAAK,QACnI+B,MAAOtM,EAAMuN,cAAef,SAAUxM,EAAMwN,oBCG7CC,GAVK,SAAAzN,GAChB,OACI,6BACI,kBAAC2J,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,kBACA,kBAACC,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,kBAAkBqC,MAAM,eAAe4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QAClI+B,MAAOtM,EAAM0N,iBAAkBlB,SAAUxM,EAAM2N,mBAAoBC,YAAY,qBCKhFC,GAVD,SAAA7N,GACV,OACI,6BACI,kBAAC2J,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,SACA,kBAACC,GAAA,EAAD,CAAWC,UAAQ,EAACnJ,GAAG,iBAAiBqC,MAAM,QAAQ4E,QAAQ,WAAW5D,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASb,KAAK,QAC1H+B,MAAOtM,EAAM8N,WAAYtB,SAAUxM,EAAM+N,aAAcH,YAAY,8B,wCCUpEI,GAfQ,SAAAhO,GACnB,OACI,6BACI,kBAACiO,GAAA,EAAD,CAAa9D,UAAU,YACnB,kBAACR,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,gDACA,kBAACgC,GAAA,EAAD,CAAYtL,aAAW,kBAAkBuL,KAAK,kBAAkB7B,MAAOtM,EAAMoO,aAAc5B,SAAUxM,EAAMqO,gBACvG,kBAACC,GAAA,EAAD,CAAkBhC,MAAM,MAAMiC,QAAS,kBAACC,GAAA,EAAD,MAAWlJ,MAAM,MAAMgB,MAAO,CAAC8E,WAAY,OAAQ7J,SAAU,YACpG,kBAAC+M,GAAA,EAAD,CAAkBhC,MAAM,KAAKiC,QAAS,kBAACC,GAAA,EAAD,MAAWlJ,MAAM,KAAKgB,MAAO,CAAC8E,WAAY,OAAQ7J,SAAU,gBCLhHkN,GAAa,SAACzO,GAEhB,OACI,yBAAKsG,MAAO,CAAC8E,WAAY,SACrB,kBAACzB,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,OAAQrC,UAAW,MAAOmD,WAAY,QAAtE,gBACA,6BACI,kBAACvC,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,SAAhC,kBAAyDpL,EAAMqE,YAAN,OACzD,kBAACsF,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,SAAhC,kBAAyDpL,EAAMqE,YAAN,QACzD,kBAACsF,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,SAAhC,kBAAyDpL,EAAMqE,YAAN,OACzD,kBAACsF,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,SAAhC,kBAAyDpL,EAAMqE,YAAN,OAE7D,kBAACsF,EAAA,EAAD,CAAYrD,MAAO,CAAC8E,WAAY,OAAQc,WAAY,QAApD,mBAA6E7B,WAAWrK,EAAMoH,YAAYvB,QAAQ,MAwC/G6I,GAnCG,WAAO,IAAD,EAEgBlL,aAAa,SAAAC,GAAK,MAAK,CACvDY,YAAaZ,EAAMa,cAAcD,YACjC+C,WAAY3D,EAAMa,cAAc8C,eAF5B/C,EAFY,EAEZA,YAAa+C,EAFD,EAECA,WAKrBY,QAAQC,IAAI,aAAcb,GAE1B,IAAI7C,EAAcC,OAAOC,KAAKJ,GAAaK,KAAI,SAAAC,GAE3C,OAAO,YAAKC,MAAMC,SAASR,EAAaM,MAAWD,KAC/C,SAACI,EAAGC,GACA,OAAO,kBAAC,EAAD,CAAkBC,IAAKL,EAAQI,EAAOf,KAAMW,UAK/D,OACI,kBAACoF,EAAA,EAAD,CAAMG,QAAQ,WAAW5D,MAAO,CAAC6E,OAAQ,cACrC,kBAACxB,EAAA,EAAD,CAAYrD,MAAO,CAAC6C,QAAS,OAAQ5H,SAAU,SAAU2K,WAAY,QAArE,aACA,yBAAK5F,MAAO,CAACnF,QAAS,OAAQC,cAAe,QACzC,yBAAKkF,MAAO,CAAC2C,OAAQ,QAASoD,MAAO,UACjC,kBAAC,EAAD,CAAkBrI,KAAK,cACtBO,EACD,kBAAC,EAAD,CAAkBP,KAAK,kBAE3B,6BACI,kBAAC,GAAD,CAAYK,YAAaA,EAAa+C,WAAYA,Q,UCjDzDuH,GAAgB,SAACrC,EAAOsC,GACjC,IAAIC,GAAU,EAEd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAMxC,WACNyC,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGjCD,EAAMG,YACNF,EAAUvC,EAAMpB,QAAU0D,EAAMG,WAAaF,GAG7CD,EAAMI,YACNH,EAAUvC,EAAMpB,QAAU0D,EAAMI,WAAaH,GAG7CD,EAAMK,QAAS,CAEfJ,EADgB,uEACEK,KAAK5C,IAAUuC,EAGrC,GAAID,EAAMO,UAAW,CAEjBN,EADgB,WACEK,KAAK5C,IAAUuC,EAOrC,OAJID,EAAMQ,mBACNP,EAA2B,IAAjBvC,EAAMpB,QAAgB2D,GAG7BA,GC0aIQ,GA1bK,WAAO,IAAD,EACI5N,mBAAS,CAC/B6N,OAAQ,CACJC,WAAY,CACRjD,MAAO,GACPkD,OAAQ,CACJxL,KAAM,aACNyL,YAAa,cAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAGbc,UAAW,CACPrD,MAAO,GACPkD,OAAQ,CACJxL,KAAM,YACNyL,YAAa,aAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,IAGjBA,SAAS,IA3BS,mBACdV,EADc,KACRyB,EADQ,OA8BMnO,mBAAS,CACjC6K,MAAO,GACPkD,OAAQ,CACJxL,KAAM,QACNyL,YAAa,SAEjBC,WAAY,CACRtD,UAAU,EACV6C,SAAS,GAEbJ,SAAS,IAxCS,mBA8BdgB,EA9Bc,KA8BPC,EA9BO,OA2CkBrO,mBAAS,CAC7C6K,MAAO,GACPkD,OAAQ,CACJxL,KAAM,eACNyL,YAAa,gBAEjBC,WAAY,CACRtD,UAAU,EACV+C,WAAW,GAEfN,SAAS,IArDS,mBA2CdkB,EA3Cc,KA2CDC,EA3CC,OAwDQvO,mBAAS,CACnC6N,OAAQ,CACJW,cAAe,CACX3D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,iBACNyL,YAAa,oBAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbqB,eAAgB,CACZ5D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,mBACNyL,YAAa,+BAEjBC,WAAY,GACZb,SAAS,GAEbpL,MAAO,CACH6I,MAAO,GACPkD,OAAQ,CACJxL,KAAM,QACNyL,YAAa,SAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbsB,KAAM,CACF7D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,OACNyL,YAAa,QAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbuB,WAAY,CACR9D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,cACNyL,YAAa,eAEjBC,WAAY,CACRtD,UAAU,EACVgD,kBAAkB,GAEtBP,SAAS,GAEbwB,QAAS,CACL/D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,UACNyL,YAAa,WAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,IAGjBA,SAAS,IA5HS,mBAwDdyB,EAxDc,KAwDNC,EAxDM,OA+HwB9O,mBAAS,CACnD6N,OAAQ,CACJW,cAAe,CACX3D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,iBACNyL,YAAa,oBAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbqB,eAAgB,CACZ5D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,mBACNyL,YAAa,+BAEjBC,WAAY,GACZb,SAAS,GAEbpL,MAAO,CACH6I,MAAO,GACPkD,OAAQ,CACJxL,KAAM,QACNyL,YAAa,SAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbsB,KAAM,CACF7D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,OACNyL,YAAa,QAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,GAEbuB,WAAY,CACR9D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,cACNyL,YAAa,eAEjBC,WAAY,CACRtD,UAAU,EACVgD,kBAAkB,GAEtBP,SAAS,GAEbwB,QAAS,CACL/D,MAAO,GACPkD,OAAQ,CACJxL,KAAM,UACNyL,YAAa,WAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,IAGjB2B,eAAgB,MAChB3B,SAAS,IApMS,mBA+Hd4B,EA/Hc,KA+HEC,EA/HF,OAuMwBjP,mBAAS,CACnD6K,MAAO,UACPkD,OAAQ,CACJxL,KAAM,kBAEV0L,WAAY,CACRtD,UAAU,GAEduE,QAAS,CAAC,UAAW,WACrB9B,SAAS,IAhNS,mBAuMd+B,EAvMc,KAuMEC,EAvMF,OAmN8BpP,mBAAS,CACzD6K,MAAO,GACPkD,OAAQ,CACJxL,KAAM,cACNyL,YAAa,eAEjBC,WAAY,CACRtD,UAAU,GAEdyC,SAAS,IA5NS,mBAmNdiC,EAnNc,KAmNKC,EAnNL,OA+NctP,oBAAS,GA/NvB,mBA+NduP,EA/Nc,KA+NHC,EA/NG,KAiOtBxJ,qBAAU,WACNwJ,EAAa9C,EAAKU,SAAWgB,EAAMhB,SAAWkB,EAAYlB,SAAW+B,EAAe/B,SAAWyB,EAAOzB,SAAW4B,EAAe5B,WACjI,CAACV,EAAKU,QAASgB,EAAMhB,QAASkB,EAAYlB,QAAS+B,EAAe/B,QAASyB,EAAOzB,QAAS4B,EAAe5B,QAASmC,IAnOhG,MAqOwCxN,aAAa,SAAAC,GAAK,MAAK,CACjFY,YAAaZ,EAAMa,cAAcD,YACjC+C,WAAY3D,EAAMa,cAAc8C,WAChC8J,UAAWzN,EAAMkH,MAAMuG,UACvBvN,MAAOF,EAAMC,KAAKC,MAClBwN,OAAQ1N,EAAMC,KAAKyN,WALf9M,EArOc,EAqOdA,YAAa+C,EArOC,EAqODA,WAAY8J,EArOX,EAqOWA,UAAWvN,EArOtB,EAqOsBA,MAAOwN,EArO7B,EAqO6BA,OAQ7C9J,EAAWC,cAEbvF,EAAUC,cAGRoP,EAAW,SAACC,GACd,IAAIC,GAAiB,EAErB,GAAID,IAAoBlD,GAAQkD,IAAoBf,GAAUe,IAAoBZ,EAC9E,IAAK,IAAI7G,KAAOyH,EAAgB/B,OAC5BgC,EAAiBA,GAAkBD,EAAgB/B,OAAO1F,GAAKiF,aAGnEyC,EAAiBA,GAAkBD,EAAgBxC,QAEvD,OAAOyC,GAGLC,EAAsB,SAACrP,EAAOmP,GAA8C,IAA7BG,EAA4B,uDAAT,KACpE,OAAQH,GACJ,KAAKlD,EACDyB,EAAQ,2BAAIzB,GAAL,IACHmB,OAAO,2BACAnB,EAAKmB,QADN,mBAEAkC,EAFA,2BAGKrD,EAAKmB,OAAOkC,IAHjB,IAIElF,MAAOpK,EAAMuP,OAAOnF,MACpBuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAO6B,EAAKmB,OAAOkC,GAAkB9B,gBAGjFb,QAASuC,EAASjD,MAEtB,MACJ,KAAKmC,EACDC,EAAU,2BAAID,GAAL,IACLhB,OAAO,2BACAgB,EAAOhB,QADR,mBAEAkC,EAFA,2BAGKlB,EAAOhB,OAAOkC,IAHnB,IAIElF,MAAOpK,EAAMuP,OAAOnF,MACpBuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOgE,EAAOhB,OAAOkC,GAAkB9B,gBAGnFb,QAASuC,EAASd,MAEtBI,EAAkB,2BAAIJ,GAAL,IACbE,eAAgB,SAEpB,MACJ,KAAKC,EACwB,mBAArBe,GACAd,EAAkB,2BAAID,GAAL,IAAqBD,eAAgBtO,EAAMuP,OAAOnF,SAEvE,MACJ,KAAKyD,EACDC,EAAe,2BAAID,GAAL,IAAkBzD,MAAOpK,EAAMuP,OAAOnF,MAAOuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOyD,EAAYL,eAClH,MACJ,KAAKG,EACDC,EAAS,2BAAID,GAAL,IAAYvD,MAAOpK,EAAMuP,OAAOnF,MAAOuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOuD,EAAMH,eAChG,MACJ,KAAKkB,EACDC,EAAkB,2BAAID,GAAL,IAAqBtE,MAAOpK,EAAMuP,OAAOnF,MAAOuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOsE,EAAelB,eAC3H,MACJ,KAAKoB,EACDC,EAAqB,2BAAID,GAAL,IAAwBxE,MAAOpK,EAAMuP,OAAOnF,WAOtEoF,EAA+B,SAACxP,EAAOsP,GACJ,QAAlCf,EAAeD,eACVE,EAAkB,2BAAIJ,GAAL,IAAaE,eAAgB,SAE9CE,EAAkB,2BAAID,GAAL,IACbnB,OAAO,2BACAmB,EAAenB,QADhB,mBAEAkC,EAFA,2BAGKf,EAAenB,OAAOkC,IAH3B,IAIElF,MAAOpK,EAAMuP,OAAOnF,MACpBuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOmE,EAAenB,OAAOkC,GAAkB9B,gBAG3Fb,QAASuC,EAASX,GAClBD,eAAgB,SAuC5BmB,GAAoBT,EACpB,kBAAC,EAAD,CAAOhL,KAAMgL,GACT,kBAACvH,EAAA,EAAD,CAAYrD,MAAO,CAAC6E,OAAQ,SAA5B,+CACA,kBAACb,EAAA,EAAD,CAAQJ,QAAQ,YAAYpJ,MAAM,YAAY+B,QAAS,kBAAMd,EAAQK,KAAK,MAAMkE,MAAO,CAAC8E,WAAY,SAApG,wBAKN,KAEF,OACI,kBAACwG,GAAA,EAAD,CAAWC,SAAS,MACfF,GAED,yBAAKrL,MAAO,CAAC6C,QAAS,cAClB,kBAACQ,EAAA,EAAD,CAAYO,QAAQ,KAAKjK,UAAU,cAAciM,WAAW,OAA5D,sBAKJ,kBAAC,GAAD,MAEA,kBAACnC,EAAA,EAAD,CAAMG,QAAQ,WAAW5D,MAAO,CAAC6E,OAAQ,SACrC,yBAAK7E,MAAO,CAAC6C,QAAS,QAASlJ,UAAU,kBACrC,kBAAC0J,EAAA,EAAD,CAAYrD,MAAO,CAAC/E,SAAU,SAAU2K,WAAY,QAApD,uBACA,0BAAM4F,YAAU,EAACC,aAAa,MAAMC,SA3DxB,SAAC9P,GACzBA,EAAMC,iBAEN,IAAI8P,EAAe,CAAC9D,KAAM,CAACoB,WAAYpB,EAAKmB,OAAOC,WAAWjD,MAAOqD,UAAWxB,EAAKmB,OAAOK,UAAUrD,OAClFgE,OAAQ,CAACL,cAAeK,EAAOhB,OAAOW,cAAc3D,MAC3C4D,eAAgBI,EAAOhB,OAAOY,eAAe5D,MAC7C6D,KAAMG,EAAOhB,OAAOa,KAAK7D,MACzB7I,MAAO6M,EAAOhB,OAAO7L,MAAM6I,MAC3B8D,WAAYE,EAAOhB,OAAOc,WAAW9D,MACrC+D,QAASC,EAAOhB,OAAOe,QAAQ/D,OAExCmE,eAAgB,CAACR,cAAeQ,EAAenB,OAAOW,cAAc3D,MACxD4D,eAAgBO,EAAenB,OAAOY,eAAe5D,MACrD6D,KAAMM,EAAenB,OAAOa,KAAK7D,MACjC7I,MAAOgN,EAAenB,OAAO7L,MAAM6I,MACnC8D,WAAYK,EAAenB,OAAOc,WAAW9D,MAC7C+D,QAASI,EAAenB,OAAOe,QAAQ/D,OAEnDuD,MAAOA,EAAMvD,MACbyD,YAAaA,EAAYzD,MACzBsE,eAAgBA,EAAetE,MAC/BwE,kBAAmBA,EAAkBxE,OAUzDjF,EZzVoB,SAAE6K,EAAWvO,GACrC,OAAO,SAAA0D,GACHA,EAPG,CACHrD,KDtB6B,0BC6B7BgD,EAAMmL,KAAK,qBAAuBxO,EAAOuO,GACxCvK,MAAK,SAAAC,GACFP,EA1ByB,SAACpE,EAAIiP,GACtC,MAAO,CACHlO,KDN+B,0BCO/BoO,QAASnP,EACTiP,UAAWA,GAsBGG,CAAsBzK,EAASC,KAAKsG,KAAM+D,OAEvDpK,OAAM,SAAAC,GACHV,EArBsB,SAACU,GAC/B,MAAO,CACH/D,KDb4B,uBCc5B+D,MAAOA,GAkBOuK,CAAmBvK,QYiVxBwK,CAPS,CACdlO,YAAaA,EACbuB,MAAOwB,EACPoL,SAAUP,EACVd,OAAQA,GAGqBxN,MA6BjB,kBAAC,GAAD,CAAM0J,eAAgBc,EAAKmB,OAAOC,WAAWjD,MAAOgB,iBAAkB,SAACpL,GAAD,OAAWqP,EAAoBrP,EAAOiM,EAAM,eAC9GZ,cAAeY,EAAKmB,OAAOK,UAAUrD,MAAOkB,gBAAiB,SAACtL,GAAD,OAAWqP,EAAoBrP,EAAOiM,EAAM,gBAC7G,kBAAC,GAAD,CAAOL,WAAY+B,EAAMvD,MAAOyB,aAAc,SAAC7L,GAAD,OAAWqP,EAAoBrP,EAAO2N,MACpF,kBAAC,GAAD,CAAanC,iBAAkBqC,EAAYzD,MAAOqB,mBAAoB,SAACzL,GAAD,OAAWqP,EAAoBrP,EAAO6N,MAC5G,kBAAC,GAAD,CAAS7G,MAAQ,mBACbqD,YAAa+D,EAAOhB,OAAOW,cAAc3D,MAAOG,cAAe,SAACvK,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,kBAC7G5D,aAAc4D,EAAOhB,OAAOY,eAAe5D,MAAOK,eAAgB,SAACzK,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,mBAChH1D,UAAW0D,EAAOhB,OAAOa,KAAK7D,MAAOO,YAAa,SAAC3K,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,SAChGxD,WAAYwD,EAAOhB,OAAO7L,MAAM6I,MAAOS,aAAc,SAAC7K,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,UACnGpD,aAAcoD,EAAOhB,OAAOe,QAAQ/D,MAAOa,eAAgB,SAACjL,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,YACzGtD,UAAWsD,EAAOhB,OAAOc,WAAW9D,MAAOW,YAAa,SAAC/K,GAAD,OAAWqP,EAAoBrP,EAAOoO,EAAQ,iBAG1G,6BACI,kBAAC,GAAD,CAAgBlC,aAAcqC,EAAeD,eAAgBnC,eAAgB,SAACnM,GAAD,OAAWqP,EAAoBrP,EAAOuO,EAAgB,qBAChG,OAAlCA,EAAeD,eACZ,kBAAC,GAAD,CAAStH,MAAQ,kBACjBqD,YAAakE,EAAenB,OAAOW,cAAc3D,MAAOG,cAAe,SAACvK,GAAD,OAAWwP,EAA6BxP,EAAO,kBACtHwK,aAAc+D,EAAenB,OAAOY,eAAe5D,MAAOK,eAAgB,SAACzK,GAAD,OAAWwP,EAA6BxP,EAAO,mBACzH0K,UAAW6D,EAAenB,OAAOa,KAAK7D,MAAOO,YAAa,SAAC3K,GAAD,OAAWwP,EAA6BxP,EAAO,SACzG4K,WAAY2D,EAAenB,OAAO7L,MAAM6I,MAAOS,aAAc,SAAC7K,GAAD,OAAWwP,EAA6BxP,EAAO,UAC5GgL,aAAcuD,EAAenB,OAAOe,QAAQ/D,MAAOa,eAAgB,SAACjL,GAAD,OAAWwP,EAA6BxP,EAAO,YAClH8K,UAAWyD,EAAenB,OAAOc,WAAW9D,MAAOW,YAAa,SAAC/K,GAAD,OAAWwP,EAA6BxP,EAAO,iBAC3G,MAGZ,6BACI,kBAACyH,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,mBACA,4BAAQjJ,GAAG,cAAcqD,MAAO,CAAC8E,WAAY,OAAQrC,UAAW,OAAQjI,MAAO,sBAAuBqI,QAAS,OAC3GmD,MAAOsE,EAAetE,MAAOE,SAAU,SAACtK,GAAD,OAAWqP,EAAoBrP,EAAO0O,KAC7E,4BAAQtE,MAAM,WAAd,WACA,4BAAQA,MAAM,WAAd,aAIR,6BACI,kBAAC3C,EAAA,EAAD,CAAYrD,MAAO,CAAC8D,WAAY,OAAQ8B,WAAY,QAApD,kCACA,kBAACC,GAAA,EAAD,CAAWlJ,GAAG,cAAcqC,MAAM,sBAAsBgB,MAAO,CAACyC,UAAW,OAAQqC,WAAY,OAAQiB,MAAO,OAC1GuB,YAAY,kBAAkB6E,WAAS,EAACC,KAAM,EAAGxI,QAAQ,cAGhE8G,EACE,kBAAC1G,EAAA,EAAD,CAAQJ,QAAQ,YAAYpJ,MAAM,YAAYwF,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASpH,KAAK,UAAnG,UAEI,6BACI,kBAACsG,EAAA,EAAD,CAAQJ,QAAQ,YAAYzE,UAAQ,EAACa,MAAO,CAACyC,UAAW,OAAQqC,WAAY,QAASpH,KAAK,UAA1F,UACA,kBAAC2F,EAAA,EAAD,CAAY7I,MAAM,YAAYS,SAAS,SAAS+E,MAAO,CAAC8E,WAAY,OAAQrC,UAAW,QAAvF,qFCzbtB4J,GAAc,SAACC,GACxB,MAAO,CACH5O,KdGoB,ecFpB4O,SAAUA,IAWLC,GAAa,WAItB,OAHAhI,aAAaiI,WAAW,SACxBjI,aAAaiI,WAAW,UACxBjI,aAAaiI,WAAW,kBACjB,CACH9O,KdZoB,iBcgBf+O,GAAmB,SAACC,GAC7B,OAAO,SAAA3L,GACH4L,YAAW,WACP5L,EAASwL,QACO,IAAjBG,KCyIIE,I,OApKF,WAAM,MAIazR,mBAAS,CACjC6K,MAAO,GACPkD,OAAQ,CACJxL,KAAM,QACNyL,YAAa,SAEjBC,WAAY,CACRtD,UAAU,EACV6C,SAAS,GAEbJ,SAAS,IAdE,mBAIPgB,EAJO,KAIAC,EAJA,OAiBmBrO,mBAAS,CACvC6K,MAAO,GACPkD,OAAQ,CACJxL,KAAM,WACNyL,YAAa,YAEjBC,WAAY,CACRtD,UAAU,EACV2C,UAAW,GAEfF,SAAS,IA3BE,mBAiBPsE,EAjBO,KAiBGC,EAjBH,OA8BmB3R,oBAAS,GA9B5B,mBA8BP4R,EA9BO,KA8BGC,EA9BH,OA+B+B7R,oBAAS,GA/BxC,mBA+BP6P,EA/BO,KA+BSiC,EA/BT,OAiC6B/P,aAAa,SAAAC,GAAK,MAAK,CAC/DsE,MAAOtE,EAAMC,KAAKqE,MAClBxE,eAAqC,OAArBE,EAAMC,KAAKC,MAC3B6P,SAAU/P,EAAMa,cAAckP,aAH1BzL,EAjCO,EAiCPA,MAAOxE,EAjCA,EAiCAA,eAAgBiQ,EAjChB,EAiCgBA,SAMzBnM,EAAWC,cA4BXmM,EAAa,CAAE5D,EAAOsD,GAAWzO,KAAK,SAAAgP,GACxC,OACI,yBAAKzT,UAAU,gBAAgB+E,IAAM0O,EAAalE,OAAOxL,MACrD,2BAAOA,KAAO0P,EAAalE,OAAOxL,KAC9BsI,MAAQoH,EAAapH,MACrBsB,YAAY,IACZpB,SAAW,SAACtK,GAAD,OAhCC,SAACA,EAAOmP,GAEhC,OAAQA,GACJ,KAAKxB,EACFC,EAAS,2BAAID,GAAL,IAAYvD,MAAOpK,EAAMuP,OAAOnF,MAAOuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAOuD,EAAMH,eAChG,MACH,KAAKyD,EACFC,EAAY,2BAAID,GAAL,IAAe7G,MAAOpK,EAAMuP,OAAOnF,MAAOuC,QAASF,GAAczM,EAAMuP,OAAOnF,MAAO6G,EAASzD,eAMhH6D,EAAkB1D,EAAMhB,SAAWsE,EAAStE,SAmBV8E,CAAoBzR,EAAOwR,IACjDtH,UAAQ,IAyBmB,IAA9BsH,EAAapH,MAAMpB,OAChB,2BAAOjL,UAAU,kBAAmByT,EAAalE,OAAOC,aAExD,6BACI,2BAAOxP,UAAU,eAAgByT,EAAalE,OAAOC,aACpDiE,EAAa7E,QACV,KACA,6BAC2B,UAA7B6E,EAAalE,OAAOxL,KAClB,uBAAG/D,UAAU,eAAb,iCACE,uBAAGA,UAAU,eAAb,0DAgBtB2T,EAAe,KAQnB,OANIJ,GAAYjQ,EACZqQ,EAAe,kBAAC,IAAD,CAAU1T,GAAG,cACrBqD,IACPqQ,EAAe,kBAAC,IAAD,CAAU1T,GAAG,OAI5B,yBAAKD,UAAU,cACT2T,EACAP,EAAW,uBAAGpT,UAAU,cAAb,uBAAoD,uBAAGA,UAAU,cAAb,uBACjE,0BAAM+R,SAhFQ,SAAC9P,GACnBA,EAAMC,iBACNkF,ED5BY,SAACwI,EAAOsD,EAAUE,GAClC,OAAO,SAAAhM,GACHA,EAtCG,CACHrD,KdQkB,ec8BlB,IAAM4O,EAAW,CACb/C,MAAOA,EACPsD,SAAUA,EACVU,mBAAmB,GAGnBC,EAAM,wGAELT,IAAYS,EAAM,qHAEvB9M,IAAMmL,KAAK2B,EAAKlB,GACVjL,MAAO,SAAAC,GACJiD,aAAakJ,QAAQ,QAASnM,EAASC,KAAKmM,SAC5CnJ,aAAakJ,QAAQ,SAAUnM,EAASC,KAAKoM,SAC7CpJ,aAAakJ,QAAQ,iBAAkB,IAAIG,KAAMrP,SAASqP,KAAKC,OAA6C,IAApCtP,SAAS+C,EAASC,KAAKuM,aAC/F/M,EAASsL,GAAY/K,EAASC,OAC9BR,EAAS0L,GAAiBnL,EAASC,KAAKuM,eAE3CtM,OAAO,SAAAC,GACJV,EA9CO,SAAEU,GACtB,MAAO,CACH/D,KdHiB,YcIjB+D,MAAOA,GA2CWsM,CAAStM,EAAMH,SAASC,KAAKE,YCMrCrE,CAAKmM,EAAMvD,MAAO6G,EAAS7G,MAAO+G,KA8EPpT,UAAU,eACrCwT,EACA1L,EAAQ,uBAAGzB,MAAO,CAACxF,MAAO,QAASiH,EAAMuM,QAAjC,mBAA8D,KACxE,4BAAQtQ,KAAK,SAASyB,UAAW6L,GAC7B,+BACA,+BACA,+BACA,+BACE+B,EAAW,UAAW,YAIhC,yBAAKpT,UAAU,eACToT,EACE,uBAAGpT,UAAU,sBAAb,4BAAiE,uBAAGA,UAAU,sBAAb,yCAGrE,yBAAKA,UAAU,kBACf,4BAAQ+D,KAAK,SAASsC,MAAO,CAACiO,cAAe,GAAI1R,QA7F/B,WAE1ByQ,GADmBD,KA6FLA,EAAW,UAAW,gBCnJ7BmB,GAbA,WAEX,IAAMnN,EAAWC,cAMjB,OAJAG,qBAAW,WACPJ,EAASwL,SAIT,kBAAC,IAAD,CAAU3S,GAAG,WCuBNuU,GAxBH,SAAC,GAAqB,EAAnBC,aAAoB,IAE3BrN,EAAWC,cAMjB,OAJAG,qBAAU,WACRJ,GHkDO,SAAAA,GAEH,GADcwD,aAAaC,QAAQ,SAG5B,CACH,IAAM6J,EAAiB,IAAIT,KAAKrJ,aAAaC,QAAQ,mBACrD,GAAI6J,EAAiB,IAAIT,KACrB7M,EAASwL,UACN,CACH,IAAMD,EAAW,CACboB,QAASnJ,aAAaC,QAAQ,SAC9BmJ,QAASpJ,aAAaC,QAAQ,WAElCzD,EAASsL,GAAYC,IACrBvL,EAAS0L,IAAkB,IAAImB,KAAKS,GAAkB,IAAIT,MAAU,YAXxE7M,EAASwL,YGjDjB,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+B,KAAK,wBAAwBzK,UAAYkF,KAChD,kBAAC,IAAD,CAAOuF,KAAK,YAAYzK,UAAYxB,IACpC,kBAAC,IAAD,CAAOiM,KAAK,UAAUzK,UAAYM,KAClC,kBAAC,IAAD,CAAOmK,KAAK,QAAQzK,UAAY+I,KAChC,kBAAC,IAAD,CAAO0B,KAAK,UAAUzK,UAAYqK,KAClC,kBAAC,IAAD,CAAOI,KAAK,IAAIzK,UAAYhD,QClBlBhE,QACW,cAA7B0R,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCdFC,GAAa,CACbC,MAAO,GACPC,MAAO,EACPC,OAAQ,GACRC,KAAM,KAGJC,GAAe,CACjBjR,YAAa,KACb+C,WAXkB,EAYlBoM,UAAU,GA+CC+B,GA5CC,WAAmC,IAAlC9R,EAAiC,uDAAzB6R,GAAcE,EAAW,uCAC9C,OAAQA,EAAOxR,MACX,InBnBsB,iBmBoBlB,OAAO,2BACAP,GADP,IAEIY,YAAY,2BACLZ,EAAMY,aADF,mBAENmR,EAAO1R,WAAaL,EAAMY,YAAYmR,EAAO1R,YAAc,IAEhEsD,WAAY3D,EAAM2D,WAAa6N,GAAWO,EAAO1R,YACjD0P,UAAU,IAGlB,InB7ByB,oBmB8BrB,OAAO,2BACA/P,GADP,IAEIY,YAAY,2BACLZ,EAAMY,aADF,mBAENmR,EAAO1R,WAAaL,EAAMY,YAAYmR,EAAO1R,YAAc,IAEhEsD,WAAY3D,EAAM2D,WAAa6N,GAAWO,EAAO1R,cAGzD,InBtCyB,oBmBuCrB,OAAO,2BACAL,GADP,IAEIY,YAAamR,EAAOnR,YACpB+C,WA1CM,EA2CNoM,UAAU,IAGlB,InB9BsB,iBmB+BlB,OAAO,2BACA/P,GADP,IAEIY,YAAamR,EAAOnR,YACpB+C,WAAYoO,EAAOpO,WACnBoM,UAAU,IAGlB,QACI,OAAO/P,ICvDb6R,GAAe,CACjB5K,OAAQ,GACR3C,MAAO,KACPmJ,WAAW,EACXuE,SAAS,GA0DEF,GAvDC,WAAmC,IAAlC9R,EAAiC,uDAAzB6R,GAAcE,EAAW,uCAC9C,OAAQA,EAAOxR,MACX,IpBJ4B,uBoBKxB,OAAO,2BACAP,GADP,IAEIsE,MAAO,KACPmJ,WAAW,EACXuE,SAAS,IAEjB,IpBd6B,wBoBezB,OAAO,2BACAhS,GADP,IAEIsE,MAAO,KACPmJ,WAAW,EACXuE,SAAS,IAEjB,IpBpB+B,0BoBqB3B,IAAMC,EAAQ,2BACPF,EAAOtD,WADA,IAEVjP,GAAIuS,EAAOpD,UAEf,OAAO,2BACA3O,GADP,IAEIyN,WAAW,EACXxG,OAAQjH,EAAMiH,OAAOiL,OAAOD,KAGpC,IpB9B4B,uBoB+BxB,OAAO,2BACAjS,GADP,IAEIyN,WAAW,IAEnB,IpBhC0B,qBoBiCtB,OAAO,2BACAzN,GADP,IAEIgS,SAAS,IAEjB,IpBpC4B,uBoBqCxB,OAAO,2BACAhS,GADP,IAEIiH,OAAQ8K,EAAO9K,OACf+K,SAAS,IAEjB,IpBzCyB,oBoB0CrB,OAAO,2BACAhS,GADP,IAEIiH,OAAQ,GACR3C,MAAOyN,EAAOzN,MACd0N,SAAS,IAEjB,QACI,OAAOhS,IC1Db6R,GAAe,CACjB3R,MAAO,KACPwN,OAAQ,KACRpJ,MAAO,KACP0N,SAAS,GAoCEF,GAjCC,WAAmC,IAAlC9R,EAAiC,uDAAzB6R,GAAcE,EAAW,uCAC9C,OAAQA,EAAOxR,MACX,IrBEkB,aqBDd,OAAO,2BACAP,GADP,IAEIgS,SAAS,EACT1N,MAAO,OAEf,IrBHoB,eqBIhB,OAAO,2BACAtE,GADP,IAEIE,MAAO6R,EAAO5C,SAASoB,QACvB7C,OAAQqE,EAAO5C,SAASqB,QACxBlM,MAAO,KACP0N,SAAS,IAEjB,IrBViB,YqBWb,OAAO,2BACAhS,GADP,IAEIgS,SAAS,EACT1N,MAAOyN,EAAOzN,QAEtB,IrBfoB,eqBgBhB,OAAO,2BACAtE,GADP,IAEIE,MAAO,KACPwN,OAAQ,OAEhB,QACI,OAAO1N,I,4BCtBb9C,GAAQiV,aAAe,CAC3B7U,QAAS,CACPC,QAAS,CACP6U,MAAO,UACPC,KAAM,UACN7U,KAAM,WAKR8U,kBAAmB,EAInBC,YAAa,MAIXC,GAAmBpB,OAAOqB,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClC/R,cAAegS,GACf3L,MAAO4L,GACP7S,KAAM8S,KAGFC,GAAQC,aAAYN,GAAaH,GAAiBU,aAAgBC,QAExEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAQA,IAChB,kBAACM,GAAA,EAAD,CAAepW,MAAOA,IACpB,kBAAC,IAAMqW,WAAP,KACE,kBAAC,GAAD,SAKNC,SAASC,eAAe,SJ8EpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1P,MAAK,SAAA2P,GACJA,EAAaC,gBAEdzP,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMuM,a,mBKzI5BkD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.5c1feea5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './NavigationItems.css';\n\nexport const NavigationItem = (props) => {\n    return (\n        <li className='NavigationItem'>\n            <NavLink to={props.link} exact activeClassName='active'>\n               {props.children}\n            </NavLink>\n        </li>\n        \n    );\n}\n\nconst NavigationItems = (props) => {\n    return (\n        <ol className='NavigationItems'>\n            <NavigationItem link=\"/\">Burger Builder</NavigationItem>\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\n            {props.isAuth ? <NavigationItem link=\"/logout\">Log Out </NavigationItem>\n             : <NavigationItem link='/auth'>Account</NavigationItem>}\n        </ol>\n    );\n}\n\nexport default NavigationItems;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AppBar, Toolbar, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport './Headerbar.css';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Logo from '../../../assets/images/burger-logo.png';\n\nconst useStyle = makeStyles((theme) => ({\n    root: {\n        position: 'fixed',\n        color: theme.palette.primary.dark,\n    },\n    toolbarRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    menuIcon: {\n        color: 'white',\n        fontSize: 'large',\n    }\n}));\n\nconst HeaderBar = (props) => {\n\n    const [ anchorEl, setAnchorEl ] = useState(null);\n\n    const classes = useStyle();\n\n    const matches = useMediaQuery('(min-width: 600px)');\n\n    let history = useHistory();\n\n    const clickOpenHandler = (event) => {\n        setAnchorEl(event.currentTarget);\n    }\n\n    const clickCloseHandler = (event, link) => {\n        event.preventDefault();\n        history.push(link);\n        setAnchorEl(null);\n    }\n\n    const closeMenuHandler = () => {\n        setAnchorEl(null);\n    }\n\n    return (\n        <div>\n            <AppBar className={classes.root}> \n                <Toolbar className='toolbarRoot'>\n                    <div className='BurgerLogo'>\n                        <img src={Logo} alt='MyBurger' />\n                    </div>\n\n                    {matches ? \n                        (<div>\n                            <NavigationItems isAuth={props.isAuth} />    \n                        </div>)\n                    : \n                        (<div>\n                            <IconButton edge='end' aria-label=\"menu\" onClick={clickOpenHandler} aria-haspopup=\"true\">\n                                <MenuIcon className={classes.menuIcon} />\n                            </IconButton> \n\n                            <Menu id='header-menu' open={Boolean(anchorEl)} anchorEl={anchorEl} onClose={closeMenuHandler}>\n                                <MenuItem onClick={event => clickCloseHandler(event, '/')}>Burger Builder</MenuItem>\n                                <MenuItem onClick={event => clickCloseHandler(event, '/orders')}>Orders</MenuItem>\n\n                                {props.isAuth ? \n                                    <MenuItem onClick={event => clickCloseHandler(event, '/logout')}>Log Out</MenuItem>\n                                    : <MenuItem onClick={event => clickCloseHandler(event, '/auth')}>Account</MenuItem>\n                                }\n                            </Menu>\n                        </div>)  \n                    }   \n\n                </Toolbar>\n            </AppBar> \n        </div>\n    );\n}\n\nexport default HeaderBar;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport './Layout.css';\nimport Headerbar from '../Navigation/Headerbar/Headerbar';\n\nconst Layout = props => {\n  const { isAuthenticate } = useSelector( state => ({\n    isAuthenticate: state.auth.token !== null,\n  }));\n\n  return (\n    <>\n      <Headerbar isAuth={isAuthenticate} />\n      <main className=\"Content\">\n        {props.children}\n      </main>\n    </>\n  );\n}\n\nexport default Layout;","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n\nclass BurgerIngredient extends React.Component {\n\n    render() {\n\n        let ingredient = null;\n\n        // different types of ingredients that the system wants to receive\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className='BreadBottom'></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className='BreadTop'>\n                       <div className='Seeds1'></div>\n                       <div className='Seeds2'></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className='Meat'></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className='Cheese'></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className='Salad'></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className='Bacon'></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n        return ingredient;\n    }\n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string,\n}\n\nexport default BurgerIngredient;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredient';\n\nconst Burger = React.memo( () => {\n\n    const { ingredients } = useSelector( state => ({\n        ingredients: state.burgerBuilder.ingredients,\n    }));\n\n    let transformed = Object.keys(ingredients).map(igKey => {\n            // the number of each ingredient --> the length of an array\n            return [ ...Array(parseInt(ingredients[ igKey ]))].map(\n                (_, index) => {\n                    return <BurgerIngredient key={igKey + index} type={igKey} />\n                }\n            );\n        });\n\n    let totalLayer = Object.values(ingredients).reduce((acc, cur) => acc + cur, 0);\n\n    if (totalLayer === 0) {\n        transformed = <p>Please scroll down to create your own burger!</p>\n    }\n\n    return (\n        <div className='Burger'>\n            <BurgerIngredient type=\"bread-top\" />\n            { transformed }\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n});\n\nexport default Burger;\n","import React from 'react';\nimport './BuildControls.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\n\n\nconst BuildControl = (props) => {\n    return (\n        <div className=\"BuildControl\">\n            <div className='Label'>{props.label}</div>\n            <button  className='Less ControlButton' onClick={props.removed} disabled={props.disabled}>Less</button>\n            <button className='More ControlButton' onClick={props.added}>More</button>\n        </div>\n    );\n}\n\n\nconst BuildControls = (props) => {\n\n    return (\n        <div className='BuildControls'>\n            <p>Total Price: {props.price.toFixed(2)}</p>\n            {controls.map(ctrl => <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.added(ctrl.type)}\n                removed={() => props.removed(ctrl.type)}\n                disabled = {props.disabled[ctrl.type]} \n            /> )}\n            <button className='OrderButton'\n                    disabled={props.orderDisabled}\n                    onClick={props.ordered}>ORDER NOW</button>\n        </div>\n    );\n}\n\nexport default BuildControls;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    return (props.show ? <div className='Backdrop' onClick={props.clicked} /> : null);\n}\n\nexport default backdrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => {\n    return (\n        <Aux>\n            <Backdrop show={props.show} clicked={props.clicked} />\n            <div className='Modal'\n                 style={{transform: props.show ? 'translateY(0)': 'translateY(-100vh)',\n                         opacity: props.show ? '1': '0'}}>\n                {props.children}\n            </div>\n        </Aux>\n    );\n    \n}\n\nexport default modal;","import React from 'react';\nimport './BurgerOrderSummary.css';\n\nconst burgerOrderSummary = (props) => {\n    let burgerOrder = Object.keys(props.ingredients).map(\n    igKey => <li key={igKey}><span style={{ textTransform: 'capitalize'}}>{igKey}</span>: {props.ingredients[igKey]}</li>\n    );\n\n    return (\n        <div>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n               {burgerOrder}\n            </ul> \n            <p><strong>Total Price: ${props.price}</strong></p>           \n            <p>Continue to Checkout?</p>\n            <button className='Button Danger' onClick={props.orderCancelled}>CANCEL</button>\n            <button className='Button Success' onClick={props.orderContinue}>CONTINUE</button>\n        </div>\n    );\n}\n\nexport default burgerOrderSummary;","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => {\n    return (\n        <div className=\"Loader\">Loading...</div>\n    );\n}\n\nexport default spinner;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-1f18b.firebaseio.com',\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport BurgerOrderSummary from '../../components/Burger/BurgerOrderSummary/BurgerOrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addIngredient, removeIngredient, fetchIngredients } from '../../store/action/burgerBuilder';\nimport { purchaseBurgerInit } from '../../store/action/order';\nimport { useHistory } from 'react-router-dom';\n\nconst BurgerBuilder = () => {\n\n    const { ingredients, totalPrice } = useSelector(state => ({\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n    }));\n\n    const dispatch = useDispatch();\n\n    const [ purchasing, setPurchasing ] = useState(false);\n\n    let history = useHistory();\n\n    useEffect(() => {\n        dispatch(fetchIngredients());\n        dispatch(purchaseBurgerInit());\n    }, [ dispatch ]);\n\n    const orderDisable = (ingredients) => {\n        let totalAmtIgr = 0;\n        for (let key in ingredients) {\n            totalAmtIgr += ingredients[key];\n        }\n\n        if (totalAmtIgr > 0) {return false;}\n        else {return true;}\n    }\n\n    const purchasingHandler = () => {\n        setPurchasing(true);\n    }\n\n    const purchasingCancelledHandler = () => {\n        setPurchasing(false);\n    }\n\n    const purchasingContinueHandler = () => {\n        console.log(ingredients);\n        console.log(purchasing);\n        console.log(history);\n        history.push('/checkOut');\n    }\n        \n\n    let burger = <Spinner />;\n    let buildControls = null;\n    let burgerOrderSummary = null;\n\n    if (ingredients) {\n        let disabledInfo = {...ingredients};\n\n        for(let key in disabledInfo) {\n            disabledInfo[key] = (disabledInfo[key] <= 0);\n        }\n\n        burger = <Burger ingredients={ingredients}/>;\n\n        buildControls = <BuildControls \n            added={(ingredient) => dispatch(addIngredient(ingredient))} \n            removed={(ingredient) => dispatch(removeIngredient(ingredient))}\n            disabled={disabledInfo} \n            price={totalPrice}\n            orderDisabled={orderDisable(ingredients)}\n            ordered = {purchasingHandler}\n        />;\n\n        burgerOrderSummary = <BurgerOrderSummary ingredients={ingredients} \n                                orderCancelled={purchasingCancelledHandler} \n                                orderContinue={purchasingContinueHandler} \n                                price={totalPrice.toFixed(2)} />\n    }\n        \n    return (\n        <Aux>\n            {burger}\n            <Modal show={purchasing} clicked={purchasingCancelledHandler}>\n                {burgerOrderSummary}\n            </Modal>\n            {buildControls}\n        </Aux>\n        );\n    }\n\nexport default BurgerBuilder;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (ing) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredient: ing,\n    };\n};\n\nexport const removeIngredient = (ing) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredient: ing,\n    };\n};\n\nconst fetch = (ingredients) => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS,\n        ingredients: ingredients,\n    }\n}\n\nexport const fetchIngredients = () => {\n    return dispatch => {\n        axios.get('/Ingredients.json')\n            .then(response => {\n                dispatch(fetch(response.data));\n            })\n            .catch(error => console.log(error));\n    };\n}\n\nexport const reorderBurger = (ingredients, totalPrice) => {\n    return {\n        type: actionTypes.REORDER_BURGER,\n        ingredients: ingredients,\n        totalPrice: totalPrice,\n    }\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const FETCH_INGREDIENTS = 'FETCH_INGREDIENTS';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_INIT = 'PURCHASE_BURGER_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOG_OUT = 'AUTH_LOG_OUT';\n\nexport const REORDER_BURGER = 'REORDER_BURGER';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerInit = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_INIT,\n    }\n}\n\nexport const purchaseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData,\n    };\n};\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n};\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START,\n    }\n}\n\nexport const proceedToPay = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post('/orders.json?auth=' + token, orderData)\n        .then(response => { \n            dispatch( purchaseBurgerSuccess(response.data.name, orderData))\n        })\n        .catch(error => { \n            dispatch( purchaseBurgerFail(error)); \n        });\n    }\n}\n\nexport const fetchOrderStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    }\n};\n\nexport const fetchOrderSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders,\n    }\n};\n\nexport const fetchOrderFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error,\n    }\n};\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrderStart());\n        const queryParams = '?auth=' + localStorage.getItem(\"token\") + '&orderBy=\"userId\"&equalTo=\"' + localStorage.getItem(\"userId\") + '\"';\n        axios.get('/orders.json' + queryParams)\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key,\n                    });\n                };\n                dispatch(fetchOrderSuccess(fetchedOrders));\n            })\n            .catch( error => dispatch( fetchOrderFail(error))); \n    }\n};\n\n","import React from 'react';\nimport Burger from '../Burger/Burger';\nimport './CheckOutSummary.css';\n\nconst CheckOutSummary = (props) => {\n    return (\n        <div className='CheckOutSummary'>\n            <h1>We hope you enjoy your meal!</h1>\n            <Burger ingredients = {props.ingredients} />\n            <button className='Button Danger' onClick={props.cancel}>CANCEL</button>\n            <button className='Button Success' onClick={props.continue}>{props.isAuth ? 'CONTINUE': 'SIGN IN'}</button>\n        </div>\n    );\n}\n\nexport default CheckOutSummary;","import React from 'react';\nimport CheckOutSummary from '../../components/CheckOutSummary/CheckOutSummary';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\n\nconst CheckOut = () => {\n\n    const { ingredients, isAuthenticate } = useSelector( state => ({\n        ingredients: state.burgerBuilder.ingredients,\n        isAuthenticate: state.auth.token !== null,\n    }));\n\n    let history = useHistory();\n\n    const cancelledOrderHandler = () => {\n        history.goBack();\n    }\n\n    const continueOrderHandler = () => {\n\n        if (isAuthenticate) {\n            history.push({pathname: '/checkOut/contactData'});\n        } else {\n            history.push({pathname: '/auth'});\n        }\n    }\n\n    let checkOutPage = <Redirect to= {{pathname: '/'}} />;\n    if (ingredients) {\n        checkOutPage = (\n          <div>\n            <CheckOutSummary \n                ingredients={ingredients} \n                cancel = {cancelledOrderHandler}\n                continue = {continueOrderHandler}\n                isAuth = {isAuthenticate}\n            /> \n          </div> )\n        }\n\n    return (\n        <div>\n            {checkOutPage}  \n        </div>\n    );\n}\n\nexport default CheckOut;","import React from 'react';\nimport { Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\n\nconst useStyle = makeStyles({\n    root: {\n        marginTop: '24px',\n        marginBottom: '24px',\n        height: '350px',\n    },\n    title: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start',\n        padding: '8px 0px',\n    },\n    orderStatus: {\n        fontSize: '1.1rem',\n        paddingLeft: '8px',\n    },\n    line: {\n        padding: '0 -8px'\n    },\n    ingTitle: {\n        padding: '8px 0'\n    },\n    ing: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: '2px 0 2px 0'\n    },\n});\n\nconst OrderCard = props => {\n    const classes = useStyle();   \n\n    const eachIng = Object.keys(props.ingredients).map( ing => {\n        return (\n            <div className={classes.ing} key={ ing }>\n                <Typography>\n                    {ing}\n                </Typography>\n                <span>\n                    { [...Array( parseInt(props.ingredients[ing]) )].map(ele => \n                        <LooksOneIcon key={Math.random()}/> )}\n                </span>\n            </div>);\n    });\n\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <div className={classes.title}>\n                    <CheckCircleOutlineIcon />\n                    <Typography className={classes.orderStatus} align='center'>\n                        Order Completed\n                    </Typography>\n                </div>\n\n                <hr />\n\n                <div style={{height: '180px'}}>\n                    <Typography variant=\"caption\" component=\"h2\" className={classes.ingTitle}>\n                        Ingredients:\n                    </Typography>\n\n                    {eachIng}\n                </div>\n                \n                <hr />\n\n                <div style={{paddingTop: '16px', display: 'flex', justifyContent: 'space-between'}}>\n                    <Typography variant='caption'> Total: ${parseFloat(props.price).toFixed(2)}</Typography>\n                    <Button size=\"small\" variant='contained' color=\"secondary\" onClick={props.reorder}>\n                        REORDER\n                    </Button>\n                </div>\n                \n            </CardContent>\n        </Card>\n    );\n}\n\nexport default OrderCard;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { fetchOrders } from '../../store/action/order';\nimport { reorderBurger } from '../../store/action/burgerBuilder';\nimport OrderCard from '../../components/UI/OrderCard/OrderCard';\nimport Modal from '../../components/UI/Modal/Modal';\nimport { Button, Grid, Typography } from '@material-ui/core';\n\nconst Orders = () => {\n\n    const { orders, isAuthenticate } = useSelector( state => ({\n        orders: state.order.orders,\n        isAuthenticate: state.auth.token !== null,\n    }));\n\n    const dispatch = useDispatch(); \n\n    \n    useEffect(() => {\n        dispatch(fetchOrders());\n        // eslint-disable-next-line\n    }, []);\n\n    let history = useHistory();\n\n    const reorderHandler = (event, ings, totalPrice) => {\n        event.preventDefault();\n        dispatch(reorderBurger(ings, totalPrice));\n        history.push('/checkOut');\n    }\n\n    let order = null;\n\n    if (!isAuthenticate) {\n        order = \n            (<Modal show={!isAuthenticate}>\n                <Typography style={{margin: '16px'}}>Please sign in first!</Typography>\n                <Button variant='contained' color='secondary' onClick={() => history.push('/auth')} style={{marginLeft: '16px'}}>\n                    SIGN IN\n                </Button>\n            </Modal>);\n    } else if (orders.length === 0) {\n        order = (\n            <Modal show={orders.length === 0}>\n                <Typography style={{margin: '16px'}}>You have no orders yet!</Typography>\n                <Button variant='contained' color='secondary' onClick={() => history.push('/')} style={{marginLeft: '16px'}}>\n                    CREATE YOUR FIRST BURGER\n                </Button>\n            </Modal>\n        );\n    }  else {\n        order = orders.map(ord => {\n            return (\n                <Grid item xs={12} sm={12} md={6} lg={4}  key={ord.id}>\n                    <OrderCard  ingredients={ord.ingredients} price={ord.price} \n                       reorder={(event) => reorderHandler(event, ord.ingredients, ord.price)} \n                    />\n                </Grid>\n            );\n        });\n    }\n\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={2} >\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Grid container spacing={2}>\n                               {order}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={2} >\n                    </Grid>\n                </Grid>   \n            </div>\n        );\n    }\n\n\nexport default Orders;","import React from 'react';\nimport { Typography, TextField } from '@material-ui/core';\n\nconst Address = (props) => {\n    return (\n        <div>\n            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>{props.title}</Typography>\n            <TextField required id='street-address-required' label='Street Address' variant='outlined' style={{marginTop: '16px', marginLeft: '16px', width: '80%'}} size='small'\n                value={props.streetValue} onChange={props.streetChanged} />\n            <TextField id='street-address-2-required' label='Street Address 2' variant='outlined' style={{marginTop: '16px', marginLeft: '16px', width: '80%'}} size='small'\n                value={props.street2Value} onChange={props.street2Changed} />\n            <div>\n                <TextField required id='city-required' label='City' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                    value={props.cityValue} onChange={props.cityChanged} />\n                <TextField required id='state-required' label='State' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                    value={props.stateValue} onChange={props.stateChanged} />\n            </div>\n\n            <div>\n                <TextField required id='postal-code-required' label='Postal Code' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                    value={props.codeValue} onChange={props.codeChanged} />\n                <TextField required id='country-required' label='Country' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                    value={props.countryValue} onChange={props.countryChanged} />\n            </div>\n        </div>\n    );\n}\n\nexport default Address;\n\n\n\n\n\n","import React from 'react';\nimport { Typography, TextField } from '@material-ui/core';\n\nconst Name = (props) => {\n    return (\n        <div>\n            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Full Name</Typography>\n            <TextField required id='first-name-required' label='First Name' variant='outlined' style={{marginLeft: '16px', marginTop: '16px'}} size='small'\n                value={props.firstNameValue} onChange={props.firstNameChanged} />\n            <TextField required id='last-name-required' label='Last Name' variant='outlined'  style={{marginLeft: '16px', marginTop: '16px'}} size='small'\n                value={props.lastNameValue} onChange={props.lastNameChanged} />\n        </div>\n    );\n}\n\nexport default Name;","import React from 'react';\nimport { Typography, TextField } from '@material-ui/core';\n\nconst PhoneNumber = props => {\n    return (\n        <div>\n            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Contact Number</Typography>\n            <TextField required id='number-required' label='Phone Number' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                value={props.phoneNumberValue} onChange={props.phoneNumberChanged} placeholder='(000)-000-0000' />\n        </div>\n    );\n}\n\nexport default PhoneNumber;","import React from 'react';\nimport { Typography, TextField } from '@material-ui/core';\n\nconst Email = props => {\n    return (\n        <div>\n            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Email</Typography>\n            <TextField required id='email-required' label='Email' variant='outlined' style={{marginTop: '16px', marginLeft: '16px'}} size='small'\n                value={props.emailValue} onChange={props.emailChanged} placeholder='ex: example@example.com' />\n        </div>\n    );\n}\n\nexport default Email;\n","import React from 'react';\nimport { Typography, FormControl, RadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nconst BillingAddress = props => {\n    return (\n        <div>\n            <FormControl component=\"fieldset\">\n                <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Is billing address same as shipping address?</Typography>\n                <RadioGroup aria-label=\"billing-address\" name=\"billing-address\" value={props.billingValue} onChange={props.billingChanged} >\n                    <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" style={{marginLeft: '16px', fontSize: '0.8rem'}} />\n                    <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" style={{marginLeft: '16px', fontSize: '0.8rem'}} />\n                </RadioGroup>\n            </FormControl>\n        </div>\n        \n    );\n}\n\nexport default BillingAddress;\n\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Card, Typography } from '@material-ui/core';\nimport BurgerIngredient from '../../Burger/BurgerIngredients/BurgerIngredient';\n\nconst BurgerInfo = (props) => {\n\n    return (\n        <div style={{marginLeft: '32px'}}>\n            <Typography style={{marginLeft: '16px', marginTop: '8px', fontWeight: '600'}}>Ingredients:</Typography>\n            <div>\n                <Typography style={{marginLeft: '20px'}}>Salad:        x{props.ingredients['salad']}</Typography>\n                <Typography style={{marginLeft: '20px'}}>Cheese:       x{props.ingredients['cheese']}</Typography>\n                <Typography style={{marginLeft: '20px'}}>Bacon:        x{props.ingredients['bacon']}</Typography>\n                <Typography style={{marginLeft: '20px'}}>Meat:         x{props.ingredients['meat']}</Typography>\n            </div>\n            <Typography style={{marginLeft: '16px', fontWeight: '600'}}>TOTAL PRICE:   ${parseFloat(props.totalPrice).toFixed(2)}</Typography>\n        </div>\n    );\n}\n\nconst OrderInfo = () => {\n\n    const { ingredients, totalPrice } = useSelector( state => ({\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n    }));\n\n    console.log('orderInfo:', totalPrice);\n\n    let transformed = Object.keys(ingredients).map(igKey => {\n        // the number of each ingredient --> the length of an array\n        return [ ...Array(parseInt(ingredients[ igKey ]))].map(\n            (_, index) => {\n                return <BurgerIngredient key={igKey + index} type={igKey} />\n            }\n        );\n    });\n\n    return (\n        <Card variant='outlined' style={{margin: '24px 16px'}}> \n            <Typography style={{padding: '16px', fontSize: '1.2rem', fontWeight: '600'}}>My Burger</Typography>\n            <div style={{display: 'flex', flexDirection: 'row'}}>\n                <div style={{height: '200px', width: '200px'}}>\n                    <BurgerIngredient type=\"bread-top\" />\n                    {transformed}\n                    <BurgerIngredient type=\"bread-bottom\" />\n                </div>\n                <div>\n                    <BurgerInfo ingredients={ingredients} totalPrice={totalPrice} />\n                </div>\n            </div>\n        </Card>\n    );\n}\n\nexport default OrderInfo;","export const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (!rules) {\n        return true;\n    };\n\n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid; \n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n        const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d{10}$/;\n        isValid = pattern.test(value) && isValid;\n    }\n\n    if (rules.postalCodeLength) {\n        isValid = value.length === 6 && isValid;\n    }\n\n    return isValid;\n};","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { proceedToPay } from '../../../store/action/order';\n\nimport Modal from '../../../components/UI/Modal/Modal';\nimport Address from '../../../components/FormData/Address/Address';\nimport Name from '../../../components/FormData/Name/Name';\nimport PhoneNumber from '../../../components/FormData/PhoneNumber/PhoneNumber';\nimport Email from '../../../components/FormData/Email/Email';\nimport BillingAddress from '../../../components/FormData/BillingAddress/BillingAddress';\nimport OrderInfo from '../../../components/FormData/BurgerInfo/BurgerInfo';\n\nimport { Container, Typography, Card, TextField, Button } from '@material-ui/core';\n\nimport { checkValidity } from '../../../utility/utility';\n\nconst ContactData = () => {\n    const [ name, setName ] = useState({\n        params: {\n            first_name: {\n                value: '',\n                config: {\n                    type: 'first_name',\n                    placeHolder: 'First Name',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false\n            },\n\n            last_name: {\n                value: '',\n                config: {\n                    type: 'last_name',\n                    placeHolder: 'Last Name',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false\n            }\n        },\n        isValid: false\n    });\n\n    const [ email, setEmail ] = useState({\n        value: '',\n        config: {\n            type: 'email',\n            placeHolder: 'Email',\n        },\n        validation: {\n            required: true,\n            isEmail: true,\n        },\n        isValid: false,\n    });\n\n    const [ phoneNumber, setPhoneNumber ] = useState({\n        value: '',\n        config: {\n            type: 'phone_number',\n            placeHolder: 'Phone Number',\n        },\n        validation: {\n            required: true,\n            isNumeric: true,\n        },\n        isValid: false,\n    });\n\n    const [ street, setStreet ] = useState({\n        params: {\n            streetAddress: {\n                value: '',\n                config: {\n                    type: 'street_address',\n                    placeHolder: 'Street Address 1',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            streetAddress2: {\n                value: '',\n                config: {\n                    type: 'street_address_2',\n                    placeHolder: 'Street Address 2 [optional]',\n                },\n                validation: {},\n                isValid: true,\n            },\n            state: {\n                value: '',\n                config: {\n                    type: 'state',\n                    placeHolder: 'State',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            city: {\n                value: '',\n                config: {\n                    type: 'city',\n                    placeHolder: 'City',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            postalCode: {\n                value: '',\n                config: {\n                    type: 'postal_code',\n                    placeHolder: 'Postal Code',\n                },\n                validation: {\n                    required: true,\n                    postalCodeLength: true,\n                },\n                isValid: false,\n            },\n            country: {\n                value: '',\n                config: {\n                    type: 'country',\n                    placeHolder: 'Country',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n        },\n        isValid: false\n    });\n\n    const [ billingAddress, setBillingAddress ] = useState({\n        params: {\n            streetAddress: {\n                value: '',\n                config: {\n                    type: 'street_address',\n                    placeHolder: 'Street Address 1',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            streetAddress2: {\n                value: '',\n                config: {\n                    type: 'street_address_2',\n                    placeHolder: 'Street Address 2 [optional]',\n                },\n                validation: {},\n                isValid: true,\n            },\n            state: {\n                value: '',\n                config: {\n                    type: 'state',\n                    placeHolder: 'State',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            city: {\n                value: '',\n                config: {\n                    type: 'city',\n                    placeHolder: 'City',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n            postalCode: {\n                value: '',\n                config: {\n                    type: 'postal_code',\n                    placeHolder: 'Postal Code',\n                },\n                validation: {\n                    required: true,\n                    postalCodeLength: true,\n                },\n                isValid: false,\n            },\n            country: {\n                value: '',\n                config: {\n                    type: 'country',\n                    placeHolder: 'Country',\n                },\n                validation: {\n                    required: true,\n                },\n                isValid: false,\n            },\n        },\n        selectedOption: 'Yes',\n        isValid: true\n    });\n\n    const [ deliveryMethod, setDeliveryMethod ] = useState({\n        value: 'regular',\n        config: {\n            type: 'deliveryMethod',\n        },\n        validation: {\n            required: true,\n        },\n        options: ['fastest', 'regular'],\n        isValid: true\n    });\n\n    const [ specialInstrument, setSpecialInstrument ] = useState({\n        value: '',\n        config: {\n            type: 'postal_code',\n            placeHolder: 'Postal Code',\n        },\n        validation: {\n            required: true,\n        },\n        isValid: false,\n    });\n\n    const [ formValid, setFormValid ] = useState(false);\n\n    useEffect(() => {\n        setFormValid(name.isValid && email.isValid && phoneNumber.isValid && deliveryMethod.isValid && street.isValid && billingAddress.isValid);\n    }, [name.isValid, email.isValid, phoneNumber.isValid, deliveryMethod.isValid, street.isValid, billingAddress.isValid, formValid]);\n\n    const { ingredients, totalPrice, purchased, token, userId } = useSelector( state => ({\n        ingredients: state.burgerBuilder.ingredients,\n        totalPrice: state.burgerBuilder.totalPrice,\n        purchased: state.order.purchased,\n        token: state.auth.token,\n        userId: state.auth.userId,\n        }));\n    \n    const dispatch = useDispatch();\n\n    let history = useHistory();\n\n\n    const validate = (inputIdentifier) => {\n        let totalFormValid = true;\n\n        if (inputIdentifier === name || inputIdentifier === street || inputIdentifier === billingAddress) {\n            for (let ele in inputIdentifier.params) {\n                totalFormValid = totalFormValid && inputIdentifier.params[ele].isValid;\n            }\n        } else {\n            totalFormValid = totalFormValid && inputIdentifier.isValid;\n        }\n        return totalFormValid;\n    }\n\n    const changedInputHandler = (event, inputIdentifier, secondIdentifier = null) => {\n        switch (inputIdentifier) {\n            case name: \n                setName({...name, \n                    params: {\n                        ...name.params, \n                        [ secondIdentifier ]: {\n                            ...name.params[secondIdentifier], \n                            value: event.target.value,\n                            isValid: checkValidity(event.target.value, name.params[secondIdentifier].validation)\n                        }\n                    },\n                    isValid: validate(name),\n                });\n                break;\n            case street:\n                setStreet({...street, \n                    params: {\n                        ...street.params, \n                        [ secondIdentifier ]: {\n                            ...street.params[secondIdentifier], \n                            value: event.target.value,\n                            isValid: checkValidity(event.target.value, street.params[secondIdentifier].validation)\n                        }\n                    },\n                    isValid: validate(street),\n                });\n                setBillingAddress({...street, \n                    selectedOption: \"Yes\",\n                });\n                break;\n            case billingAddress: \n                if (secondIdentifier === 'selectedOption') {\n                    setBillingAddress({...billingAddress, selectedOption: event.target.value});\n                }\n                break;\n            case phoneNumber: \n                setPhoneNumber({...phoneNumber, value: event.target.value, isValid: checkValidity(event.target.value, phoneNumber.validation)});\n                break;\n            case email:\n                setEmail({...email, value: event.target.value, isValid: checkValidity(event.target.value, email.validation)});\n                break;\n            case deliveryMethod:\n                setDeliveryMethod({...deliveryMethod, value: event.target.value, isValid: checkValidity(event.target.value, deliveryMethod.validation)});\n                break;\n            case specialInstrument:\n                setSpecialInstrument({...specialInstrument, value: event.target.value});\n                break;\n            default:\n                break;\n        }\n    }\n\n    const billingAddressChangedHandler = (event, secondIdentifier) => {\n        if(billingAddress.selectedOption === \"Yes\") {\n                setBillingAddress({...street, selectedOption: \"Yes\" });\n            } else {\n                setBillingAddress({...billingAddress, \n                    params: {\n                        ...billingAddress.params,\n                        [ secondIdentifier ]: {\n                            ...billingAddress.params[secondIdentifier], \n                            value: event.target.value,\n                            isValid: checkValidity(event.target.value, billingAddress.params[secondIdentifier].validation)\n                        }\n                    },\n                    isValid: validate(billingAddress),\n                    selectedOption: \"No\" \n                });\n            }\n    }\n\n    const proceedToPayHandler = (event) => {\n        event.preventDefault();\n\n        let customerInfo = {name: {first_name: name.params.first_name.value, last_name: name.params.last_name.value},\n                            street: {streetAddress: street.params.streetAddress.value, \n                                     streetAddress2: street.params.streetAddress2.value, \n                                     city: street.params.city.value, \n                                     state: street.params.state.value, \n                                     postalCode: street.params.postalCode.value, \n                                     country: street.params.country.value\n                                    },\n                            billingAddress: {streetAddress: billingAddress.params.streetAddress.value, \n                                        streetAddress2: billingAddress.params.streetAddress2.value, \n                                        city: billingAddress.params.city.value, \n                                        state: billingAddress.params.state.value, \n                                        postalCode: billingAddress.params.postalCode.value, \n                                        country: billingAddress.params.country.value\n                                       },\n                            email: email.value,\n                            phoneNumber: phoneNumber.value,\n                            deliveryMethod: deliveryMethod.value,\n                            specialInstrument: specialInstrument.value,\n                           };\n\n        const orderData = {\n            ingredients: ingredients,\n            price: totalPrice,\n            customer: customerInfo,\n            userId: userId,\n        };\n\n        dispatch(proceedToPay(orderData, token));\n    }\n\n    let redirectPurchased = purchased ? (\n        <Modal show={purchased} >\n            <Typography style={{margin: '16px'}}>Your order has been successfully submitted!</Typography>\n            <Button variant='contained' color='secondary' onClick={() => history.push('/')} style={{marginLeft: '16px'}}>\n                RETURN TO MAIN PAGE\n            </Button>\n        </Modal>\n    )\n    : null;\n\n    return (\n        <Container maxWidth='lg'>\n            {redirectPurchased}\n\n            <div style={{padding: '24px 16px'}}>\n                <Typography variant='h4' className='form-header' fontWeight='600'>\n                    Burger Order Form\n                </Typography>\n            </div>\n\n            <OrderInfo />\n\n            <Card variant='outlined' style={{margin: '16px'}}>\n                <div style={{padding: '16px'}} className='form-container'>\n                    <Typography style={{fontSize: '1.2rem', fontWeight: '600'}}>Contact Information</Typography>\n                    <form noValidate autoComplete='off' onSubmit={proceedToPayHandler}>\n                        <Name firstNameValue={name.params.first_name.value} firstNameChanged={(event) => changedInputHandler(event, name, 'first_name')} \n                            lastNameValue={name.params.last_name.value} lastNameChanged={(event) => changedInputHandler(event, name, 'last_name')} />\n                        <Email emailValue={email.value} emailChanged={(event) => changedInputHandler(event, email)} />\n                        <PhoneNumber phoneNumberValue={phoneNumber.value} phoneNumberChanged={(event) => changedInputHandler(event, phoneNumber)} />\n                        <Address title = 'Shipping Address'\n                            streetValue={street.params.streetAddress.value} streetChanged={(event) => changedInputHandler(event, street, 'streetAddress')}\n                            street2Value={street.params.streetAddress2.value} street2Changed={(event) => changedInputHandler(event, street, 'streetAddress2')}\n                            cityValue={street.params.city.value} cityChanged={(event) => changedInputHandler(event, street, 'city')}\n                            stateValue={street.params.state.value} stateChanged={(event) => changedInputHandler(event, street, 'state')}\n                            countryValue={street.params.country.value} countryChanged={(event) => changedInputHandler(event, street, 'country')}\n                            codeValue={street.params.postalCode.value} codeChanged={(event) => changedInputHandler(event, street, 'postalCode')}\n                        />\n\n                        <div>\n                            <BillingAddress billingValue={billingAddress.selectedOption} billingChanged={(event) => changedInputHandler(event, billingAddress, 'selectedOption')} />\n                            {billingAddress.selectedOption === 'No' ? \n                                <Address title = 'Billing Address'\n                                streetValue={billingAddress.params.streetAddress.value} streetChanged={(event) => billingAddressChangedHandler(event, 'streetAddress')}\n                                street2Value={billingAddress.params.streetAddress2.value} street2Changed={(event) => billingAddressChangedHandler(event, 'streetAddress2')}\n                                cityValue={billingAddress.params.city.value} cityChanged={(event) => billingAddressChangedHandler(event, 'city')}\n                                stateValue={billingAddress.params.state.value} stateChanged={(event) => billingAddressChangedHandler(event, 'state')}\n                                countryValue={billingAddress.params.country.value} countryChanged={(event) => billingAddressChangedHandler(event, 'country')}\n                                codeValue={billingAddress.params.postalCode.value} codeChanged={(event) => billingAddressChangedHandler(event, 'postalCode')}\n                                />: null}\n                        </div>\n\n                        <div>\n                            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Delivery Method</Typography> \n                            <select id='form-select' style={{marginLeft: '16px', marginTop: '16px', color: 'rgba(0, 0, 0, 0.87)', padding: '8px'}}\n                                value={deliveryMethod.value} onChange={(event) => changedInputHandler(event, deliveryMethod)}>\n                                <option value='regular' >regular</option>\n                                <option value='fastest' >fastest</option>\n                            </select>   \n                        </div>\n\n                        <div>\n                            <Typography style={{paddingTop: '16px', fontWeight: '600'}}>Speical Instruments (Optional)</Typography>\n                            <TextField id=\"special-ins\" label=\"Special Instruments\" style={{marginTop: '16px', marginLeft: '16px', width: '80%'}}\n                                placeholder=\"eg: extra sauce\" multiline rows={4} variant=\"outlined\"  />\n                        </div>\n\n                        {formValid ? \n                           <Button variant='contained' color='secondary' style={{marginTop: '16px', marginLeft: '16px'}} type='submit'>Submit</Button>\n                           : (\n                               <div>\n                                   <Button variant='contained' disabled style={{marginTop: '16px', marginLeft: '16px'}} type='submit'>Submit</Button>\n                                   <Typography color='secondary' fontSize='0.5rem' style={{marginLeft: '16px', marginTop: '8px'}}>Sorry, please check your information! Remember this can not be auto filled!</Typography>\n                                </div>)}  \n                    </form>\n                </div>          \n            </Card>\n     </Container>\n    );\n}\n\nexport default ContactData;","import * as actionTypes from './actionTypes';\nimport axios from 'axios';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START,\n    }\n};\n\nexport const authSuccess = (authData) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        authData: authData,\n    }\n};\n\nexport const authFail = ( error ) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const authLogOut = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expirationDate\");\n    return {\n        type: actionTypes.AUTH_LOG_OUT,\n    }\n}\n\nexport const expirationLogOut = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogOut());\n        }, expirationTime * 1000);\n    }\n}\n\nexport const auth = (email, password, isSignUp) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true,\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCObQPJwCWBw16K6HheU1Bp8sDqJQUg_uM';\n        \n        if (!isSignUp) { url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCObQPJwCWBw16K6HheU1Bp8sDqJQUg_uM'; }\n\n        axios.post(url, authData)\n             .then ( response => {\n                 localStorage.setItem(\"token\", response.data.idToken);\n                 localStorage.setItem(\"userId\", response.data.localId);\n                 localStorage.setItem(\"expirationDate\", new Date( parseInt(Date.now()) + parseInt(response.data.expiresIn) * 1000 ));\n                 dispatch(authSuccess(response.data));\n                 dispatch(expirationLogOut(response.data.expiresIn));\n             })\n             .catch( error => {\n                 dispatch(authFail(error.response.data.error));\n             });        \n    }\n}\n\nexport const checkAuthStatus = () => {\n    return dispatch => {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n            dispatch(authLogOut());\n        } else {\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n            if (expirationDate < new Date()) {\n                dispatch(authLogOut());\n            } else {\n                const authData = {\n                    idToken: localStorage.getItem(\"token\"),\n                    localId: localStorage.getItem(\"userId\"),\n                }\n                dispatch(authSuccess(authData));\n                dispatch(expirationLogOut((new Date(expirationDate) - new Date()) / 1000));\n            } \n        }\n    }\n}","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { auth } from '../../store/action/auth';\nimport './Auth.css';\n\nimport { checkValidity } from '../../utility/utility';\n\nconst Auth = () => {\n\n    // todo: error warning when totalFormValid is false\n\n    const [ email, setEmail ] = useState({\n        value: '',\n        config: {\n            type: 'email',\n            placeHolder: 'Email'\n        },\n        validation: {\n            required: true,\n            isEmail: true,\n        },\n        isValid: false,\n    });\n\n    const [ password, setPassword ] = useState({\n        value: '',\n        config: {\n            type: 'password',\n            placeHolder: 'Password',\n        },\n        validation: {\n            required: true,\n            minLength: 6,\n        },\n        isValid: false,\n    });\n\n    const [ isSignUp, setIsSignUp ] = useState(true);\n    const [ totalFormValid, setTotalFormValid ] = useState(false);\n\n    const { error, isAuthenticate, building } = useSelector( state => ({\n        error: state.auth.error,\n        isAuthenticate: state.auth.token !== null,\n        building: state.burgerBuilder.building,\n    }));\n\n    const dispatch = useDispatch();\n\n    const inputChangedHandler = (event, inputIdentifier) => {\n\n        switch (inputIdentifier) {\n            case email: \n               setEmail({...email, value: event.target.value, isValid: checkValidity(event.target.value, email.validation)});\n               break;\n            case password: \n               setPassword({...password, value: event.target.value, isValid: checkValidity(event.target.value, password.validation)});\n               break;\n            default:\n               break;\n        }\n\n        setTotalFormValid(email.isValid && password.isValid);\n    }\n\n    const signUpHandler = (event) => {\n        event.preventDefault();\n        dispatch( auth(email.value, password.value, isSignUp) );\n    };\n\n    const switchSignModeHandler = () => {\n        let newSignMode = !isSignUp;\n        setIsSignUp(newSignMode);\n    }\n\n    const signInForm = [ email, password ].map( formInputEle => {\n        return (\n            <div className='userInput-box' key={ formInputEle.config.type }>\n                <input type={ formInputEle.config.type } \n                    value={ formInputEle.value } \n                    placeholder=' '\n                    onChange={ (event) => inputChangedHandler(event, formInputEle) }\n                    required \n                />\n                {/* <label>{ formInputEle.config.placeHolder }</label> */}\n                {/* todo: check type: if it's email, then create the className to see if it is valid\n                password: check the value length, only >0 <6 appear the wrong info */}\n\n                {/* {formInputEle.config.type === 'email' ? \n                    <div>\n                        {(formInputEle.value.length > 1 && formInputEle.isValid) ?\n                            null\n                            : \n                            <div>\n                                <label>{ formInputEle.config.placeHolder }</label>\n                                <p className='requirement'> Must be a valid Email Address</p>\n                            </div>\n                        }\n                    </div>\n                    :  \n                    <div>\n                        {(formInputEle.value.length >= 1 && formInputEle.value.length < 6) ? \n                            <div className='requirement'>Your password must contain at least 6 characters</div>\n                            : null}\n                    </div>\n                } */}\n\n                {formInputEle.value.length === 0 ?\n                    <label className='no-value-label'>{ formInputEle.config.placeHolder }</label>\n                    : \n                    <div>\n                        <label className='value-label'>{ formInputEle.config.placeHolder }</label>\n                        {formInputEle.isValid ? \n                            null : \n                            <div>\n                        { formInputEle.config.type === 'email' ? \n                            <p className='requirement'>Must be a valid Email Address</p>\n                            : <p className='requirement'>Your password must contain at least 6 characters</p>}\n                    </div>\n                            }\n                        \n                    </div>\n                    \n                }\n                {/* <div className='requirement'>\n                    { formInputEle.config.type === 'email' ? 'Must be a valid Email Address' \n                        : <p>Your password must contain at least 6 characters</p>\n                    }\n                </div> */}\n            </div>   \n        );\n    });\n\n    let redirectAuth = null;\n\n    if (building && isAuthenticate) {\n        redirectAuth = <Redirect to='/checkout' />\n    } else if (isAuthenticate) {\n        redirectAuth = <Redirect to='/' />\n    } \n\n    return (\n        <div className='signin-box'> \n            { redirectAuth }\n            { isSignUp ? <p className='auth-title'>Sign up to MyBurger</p> : <p className='auth-title'>Sign in to MyBurger</p> }\n            <form onSubmit={ signUpHandler } className='signin-form'>\n                { signInForm }\n                { error ? <p style={{color: 'red'}}>{error.message}, PLEASE CHECK!</p>: null }\n                <button type='submit' disabled={!totalFormValid}>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                    { isSignUp ? 'SIGN UP': 'SIGN IN' }\n                </button>\n            </form>\n\n            <div className='newUser-box'>\n                { isSignUp ? \n                    <p className='newUser-auth-title'>Already have an account?</p> : <p className='newUser-auth-title'>No account yet? Create a new account!</p>\n                }\n\n                <div className='newUser-button'>\n                <button type='submit' style={{letterSpacing: 4}} onClick={switchSignModeHandler}>\n                    { isSignUp ? 'SIGN IN': 'SIGN UP' }\n                </button>\n                </div>\n            </div>\n        </div> \n    );\n}\n\nexport default Auth;","import React, { useEffect } from 'react';\nimport { authLogOut } from '../../../store/action/auth';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nconst Logout = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        dispatch(authLogOut());\n    });\n\n    return (\n        <Redirect to='/auth' />\n    );\n}\n\nexport default Logout;","import React, { useEffect } from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport CheckOut from './containers/CheckOut/CheckOut';\nimport Orders from './containers/Orders/Orders';\nimport ContactData from './containers/CheckOut/ContactData/ContactData';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'; \nimport { useDispatch } from 'react-redux';\nimport { checkAuthStatus } from './store/action/auth';\n\nconst App = ({ onAuthStatus }) => {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkAuthStatus());\n  });\n\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route path='/checkOut/contactData' component={ ContactData } />\n          <Route path='/checkOut' component={ CheckOut } />\n          <Route path='/orders' component={ Orders } />\n          <Route path='/auth' component={ Auth } />\n          <Route path='/logout' component={ Logout } />\n          <Route path='/' component={ BurgerBuilder } />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../action/actionTypes';\n\nconst REGULAR_PRICE = 4;\n\nlet item_price = {\n    salad: 0.5,\n    bacon: 1.0,\n    cheese: 0.7,\n    meat: 1.3,\n};\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: REGULAR_PRICE,\n    building: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredient]: state.ingredients[action.ingredient] + 1,\n                },\n                totalPrice: state.totalPrice + item_price[action.ingredient], \n                building: true,\n            };\n\n        case actionTypes.REMOVE_INGREDIENT:\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredient]: state.ingredients[action.ingredient] - 1,\n                },\n                totalPrice: state.totalPrice - item_price[action.ingredient], \n            };\n\n        case actionTypes.FETCH_INGREDIENTS:\n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: REGULAR_PRICE,\n                building: false,\n            }\n\n        case actionTypes.REORDER_BURGER: \n            return {\n                ...state,\n                ingredients: action.ingredients,\n                totalPrice: action.totalPrice,\n                building: false,\n            }\n        \n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n    orders: [],\n    error: null,\n    purchased: false,\n    loading: false,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch( action.type ) {\n        case actionTypes.PURCHASE_BURGER_INIT: \n            return {\n                ...state,\n                error: null,\n                purchased: false,\n                loading: false,\n            }\n        case actionTypes.PURCHASE_BURGER_START: \n            return {\n                ...state,\n                error: null,\n                purchased: false,\n                loading: true\n            }\n        case actionTypes.PURCHASE_BURGER_SUCCESS: {\n            const newOrder = {\n                ...action.orderData,\n                id: action.orderId,\n            };\n            return {\n                ...state,\n                purchased: true,\n                orders: state.orders.concat(newOrder)\n            };\n        }\n        case actionTypes.PURCHASE_BURGER_FAIL: \n            return {\n                ...state,\n                purchased: false,\n            };\n        case actionTypes.FETCH_ORDERS_START: \n            return {\n                ...state,\n                loading: true\n            };\n        case actionTypes.FETCH_ORDERS_SUCCESS: \n            return {\n                ...state,\n                orders: action.orders,\n                loading: false,\n            }\n        case actionTypes.FETCH_ORDERS_FAIL: \n            return {\n                ...state,\n                orders: [],\n                error: action.error,\n                loading: false,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: \n            return {\n                ...state,\n                loading: true,\n                error: null,\n            };\n        case actionTypes.AUTH_SUCCESS: \n            return {\n                ...state,\n                token: action.authData.idToken,\n                userId: action.authData.localId,\n                error: null,\n                loading: false,\n            };\n        case actionTypes.AUTH_FAIL: \n            return {\n                ...state,\n                loading: false,\n                error: action.error,\n            }\n        case actionTypes.AUTH_LOG_OUT: \n            return {\n                ...state,\n                token: null,\n                userId: null,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import redux packages\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport buildBurgerReducer from './store/reducers/buildBurger';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport thunk from 'redux-thunk';\n//import material ui custom package\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#E6B04C',\n      main: '#614003',\n      dark: '#E09407',\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n}); \n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: buildBurgerReducer,\n  order: orderReducer,\n  auth: authReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={ store }>\n    <ThemeProvider theme={theme}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </ThemeProvider>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";"],"sourceRoot":""}